
####################################################################################
#                                                                                  #
# This file contains automatically generated LAMMPSlib-energy calculators for UCS. #
#                                                                                  #
####################################################################################

import ase
#from unitcellsampling.decorators import subdir_calc

# energy calculators
from ase.calculators.lammpsrun import LAMMPS
from ase.calculators.lammpslib import LAMMPSlib

#####   Automatically generated lammps method m100574_auto   #####
def m100574_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 2.56",
		  "set type 3 charge -1.37"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m101317_auto   #####
def m101317_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.08",
		  "set type 2 charge 2.59",
		  "set type 3 charge -1.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m101357_auto   #####
def m101357_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'As': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'As': 74.9216, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.6",
		  "set type 2 charge 0.18",
		  "set type 3 charge -0.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m101863_auto   #####
def m101863_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Al': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.18",
		  "set type 3 charge -0.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m102266_auto   #####
def m102266_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.63",
		  "set type 2 charge 1.16",
		  "set type 3 charge -1.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m102437_auto   #####
def m102437_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 0.89",
		  "set type 3 charge 1.41",
		  "set type 4 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m102501_auto   #####
def m102501_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 2.29",
		  "set type 3 charge 2.31",
		  "set type 4 charge -0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m103150_auto   #####
def m103150_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Ga': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Ga': 69.723, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.79",
		  "set type 3 charge 1.03",
		  "set type 4 charge -1.25"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m103262_auto   #####
def m103262_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'K': 1, 'Li': 2, 'V': 3, 'F': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'V': 50.9415, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.85",
		  "set type 3 charge 1.35",
		  "set type 4 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m103540_auto   #####
def m103540_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.067000 2.734168",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Bi': 2, 'W': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Bi': 208.9804, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.03",
		  "set type 2 charge 1.9",
		  "set type 3 charge 2.26",
		  "set type 4 charge -0.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m103780_auto   #####
def m103780_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.009000 3.000547",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'Gd': 2, 'Cl': 3}

    atom_type_masses = {'Li': 6.941, 'Gd': 157.25, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.54",
		  "set type 2 charge 1.17",
		  "set type 3 charge -0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m104108_auto   #####
def m104108_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.080000 2.453535"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'Pt': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'Pt': 195.084}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.57",
		  "set type 2 charge -1.0",
		  "set type 3 charge 1.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m104168_auto   #####
def m104168_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.059000 2.819694",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Nb': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Nb': 92.90638, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.74",
		  "set type 3 charge 2.02",
		  "set type 4 charge -1.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m104545_auto   #####
def m104545_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.251000 3.731975",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Br': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Br': 79.904, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 1 charge 0.77",
		  "set type 2 charge -0.83",
		  "set type 2 charge -0.83",
		  "set type 3 charge -1.44",
		  "set type 3 charge -1.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m105198_auto   #####
def m105198_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.227000 3.516377",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cl': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cl': 35.453, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 0.29",
		  "set type 3 charge -0.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m105944_auto   #####
def m105944_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.07",
		  "set type 2 charge 0.01",
		  "set type 3 charge -0.15"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m106047_auto   #####
def m106047_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'V': 3, 'O': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 0.66",
		  "set type 3 charge 1.32",
		  "set type 4 charge -0.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m106483_auto   #####
def m106483_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.069000 2.783168",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Zr': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Zr': 91.224, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge 1.8",
		  "set type 3 charge 2.57",
		  "set type 4 charge -0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m106587_auto   #####
def m106587_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Br': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 0.18",
		  "set type 3 charge -0.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m107096_auto   #####
def m107096_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.008000 3.111909",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Eu': 2, 'B': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Eu': 151.964, 'B': 10.811, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.61",
		  "set type 2 charge 1.36",
		  "set type 3 charge -0.25",
		  "set type 4 charge -0.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m107442_auto   #####
def m107442_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.066000 2.631715",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Re': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Re': 186.207, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -9.62",
		  "set type 2 charge 8.96",
		  "set type 3 charge 3.43"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m107606_auto   #####
def m107606_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'La': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.13",
		  "set type 2 charge 0.44",
		  "set type 3 charge -0.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m107790_auto   #####
def m107790_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Ba': 1, 'Li': 2, 'H': 3}

    atom_type_masses = {'Ba': 137.327, 'Li': 6.941, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.15",
		  "set type 1 charge 0.15",
		  "set type 2 charge 0.89",
		  "set type 2 charge 0.89",
		  "set type 3 charge -0.35",
		  "set type 3 charge -0.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m108286_auto   #####
def m108286_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Be': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.5",
		  "set type 1 charge 0.5",
		  "set type 2 charge -0.31",
		  "set type 2 charge -0.31",
		  "set type 3 charge -0.06",
		  "set type 3 charge -0.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m109809_auto   #####
def m109809_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'F': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 1 charge 0.91",
		  "set type 2 charge 0.85",
		  "set type 2 charge 0.85",
		  "set type 3 charge -0.88",
		  "set type 3 charge -0.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m110239_auto   #####
def m110239_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.23",
		  "set type 2 charge 0.48",
		  "set type 3 charge -0.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m110412_auto   #####
def m110412_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'S': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'S': 32.065, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 0.85",
		  "set type 3 charge 1.16",
		  "set type 4 charge -0.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m110758_auto   #####
def m110758_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 1.24",
		  "set type 3 charge 1.64",
		  "set type 4 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m110819_auto   #####
def m110819_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.053000 2.609442",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Rh': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Rh': 102.9055, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge 1.66",
		  "set type 3 charge -0.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m110852_auto   #####
def m110852_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ta': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Ta': 180.94788, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.48",
		  "set type 2 charge 1.9",
		  "set type 3 charge -1.19",
		  "set type 4 charge 0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m110900_auto   #####
def m110900_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.007000 3.037074",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Ho': 3, 'Cl': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Ho': 164.93032, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.0",
		  "set type 3 charge 1.47",
		  "set type 4 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m111251_auto   #####
def m111251_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 2.03",
		  "set type 3 charge -1.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m111424_auto   #####
def m111424_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.041000 3.242871",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Lu': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Lu': 174.9668, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.02",
		  "set type 2 charge 0.34",
		  "set type 3 charge -0.18"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m111522_auto   #####
def m111522_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 1.4",
		  "set type 3 charge -0.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m111641_auto   #####
def m111641_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 1.31",
		  "set type 3 charge 1.26",
		  "set type 4 charge -1.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m111647_auto   #####
def m111647_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 2.783168",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zr': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Zr': 91.224, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 2.63",
		  "set type 3 charge -1.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m111913_auto   #####
def m111913_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.680000 3.872737",
	       "pair_coeff 3 3 0.039000 2.933729"]
    
    atom_types = {'Li': 1, 'Tl': 2, 'Au': 3}

    atom_type_masses = {'Li': 6.941, 'Tl': 204.3833, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.53",
		  "set type 2 charge -1.22",
		  "set type 3 charge 0.16"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m111994_auto   #####
def m111994_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.96",
		  "set type 3 charge 1.09",
		  "set type 4 charge -1.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m112049_auto   #####
def m112049_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Al': 3, 'F': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Al': 26.9815386, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 0.96",
		  "set type 3 charge 1.69",
		  "set type 4 charge -0.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m112186_auto   #####
def m112186_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ga': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ga': 69.723, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.59",
		  "set type 2 charge 0.83",
		  "set type 3 charge 0.56",
		  "set type 4 charge -0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m112229_auto   #####
def m112229_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.663000 3.828192"]
    
    atom_types = {'Li': 1, 'Ge': 2, 'S': 3, 'Pb': 4}

    atom_type_masses = {'Li': 6.941, 'Ge': 72.64, 'S': 32.065, 'Pb': 207.2}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 1.7",
		  "set type 3 charge -1.04",
		  "set type 4 charge 0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m113217_auto   #####
def m113217_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.105000 3.430851",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'C': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 0.81",
		  "set type 3 charge 0.86",
		  "set type 4 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m113267_auto   #####
def m113267_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.72",
		  "set type 2 charge 0.79",
		  "set type 3 charge -0.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m113459_auto   #####
def m113459_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'V': 3, 'Cl': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'V': 50.9415, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 0.45",
		  "set type 3 charge 0.54",
		  "set type 4 charge -0.4"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m114431_auto   #####
def m114431_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.305000 3.694557"]
    
    atom_types = {'K': 1, 'Li': 2, 'Al': 3, 'P': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Al': 26.9815386, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.6",
		  "set type 2 charge 0.55",
		  "set type 3 charge 0.36",
		  "set type 4 charge -1.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m114493_auto   #####
def m114493_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.080000 2.453535",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Pt': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Pt': 195.084, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 1.37",
		  "set type 3 charge -1.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m114954_auto   #####
def m114954_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'P': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'P': 30.973762, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.05",
		  "set type 2 charge -0.34",
		  "set type 3 charge 0.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m115079_auto   #####
def m115079_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.037000 2.779604",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Os': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Os': 190.23, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 1.62",
		  "set type 3 charge -1.23",
		  "set type 3 charge 1.67",
		  "set type 4 charge -1.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m115111_auto   #####
def m115111_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.053000 2.609442"]
    
    atom_types = {'Li': 1, 'B': 2, 'Rh': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'Rh': 102.9055}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.04",
		  "set type 2 charge 1.3",
		  "set type 3 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m115433_auto   #####
def m115433_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.014000 2.558661",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Co': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Co': 58.933195, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.23",
		  "set type 2 charge -0.01",
		  "set type 3 charge -0.11"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m115676_auto   #####
def m115676_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.398000 3.982317",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Te': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Te': 127.6, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 2.24",
		  "set type 3 charge 2.43",
		  "set type 4 charge -1.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m116047_auto   #####
def m116047_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.06",
		  "set type 2 charge 0.48",
		  "set type 3 charge -0.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m116059_auto   #####
def m116059_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'P': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'P': 30.973762, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.03",
		  "set type 2 charge -0.41",
		  "set type 3 charge 0.38"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m116064_auto   #####
def m116064_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.036000 2.804549"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Ag': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Ag': 107.8682}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.45",
		  "set type 2 charge -1.55",
		  "set type 3 charge 0.55"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m116113_auto   #####
def m116113_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.3",
		  "set type 2 charge 2.77",
		  "set type 3 charge 4.15",
		  "set type 4 charge -2.38"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m116217_auto   #####
def m116217_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 1.82",
		  "set type 3 charge -0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m116511_auto   #####
def m116511_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Te': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Te': 127.6, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 0.68",
		  "set type 3 charge -0.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m116838_auto   #####
def m116838_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'V': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.04",
		  "set type 3 charge 1.74",
		  "set type 4 charge -0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m117896_auto   #####
def m117896_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 0.13",
		  "set type 3 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m117995_auto   #####
def m117995_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.798313",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Hf': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Hf': 178.49, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.2",
		  "set type 2 charge 3.01",
		  "set type 3 charge -1.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m118639_auto   #####
def m118639_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.080000 2.453535",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Pt': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Pt': 195.084, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 1.85",
		  "set type 3 charge -0.65"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m119542_auto   #####
def m119542_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 3.04",
		  "set type 3 charge -1.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m119554_auto   #####
def m119554_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.227000 3.516377",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cl': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cl': 35.453, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.38",
		  "set type 3 charge -0.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m119962_auto   #####
def m119962_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.067000 2.734168",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'W': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 0.88",
		  "set type 3 charge 2.34",
		  "set type 4 charge -1.19"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m119974_auto   #####
def m119974_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'B': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.56",
		  "set type 2 charge 0.33",
		  "set type 3 charge -0.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m119993_auto   #####
def m119993_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'W': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.06",
		  "set type 2 charge 2.66",
		  "set type 3 charge -1.2"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m120354_auto   #####
def m120354_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.339000 4.009044",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'I': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'I': 126.90447, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.55",
		  "set type 3 charge -0.6"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m120734_auto   #####
def m120734_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 0.83",
		  "set type 3 charge 1.07",
		  "set type 4 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m121533_auto   #####
def m121533_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.15",
		  "set type 2 charge 0.46",
		  "set type 3 charge -0.3"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m122411_auto   #####
def m122411_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.041000 3.242871",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Lu': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Lu': 174.9668, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 1 charge 0.79",
		  "set type 2 charge 0.99",
		  "set type 2 charge 0.99",
		  "set type 3 charge -0.89",
		  "set type 3 charge -0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m122494_auto   #####
def m122494_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.066000 2.631715",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Re': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Re': 186.207, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 2.09",
		  "set type 3 charge -0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m123271_auto   #####
def m123271_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ge': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Ge': 72.64, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.94",
		  "set type 2 charge 1.92",
		  "set type 3 charge -0.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m123290_auto   #####
def m123290_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.080000 2.453535"]
    
    atom_types = {'Li': 1, 'B': 2, 'Pt': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'Pt': 195.084}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.11",
		  "set type 2 charge -0.47",
		  "set type 3 charge 0.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m123679_auto   #####
def m123679_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Sb': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'Sb': 121.76, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.22",
		  "set type 2 charge -1.65",
		  "set type 3 charge 0.74"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m123727_auto   #####
def m123727_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.274000 3.594776",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'S': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'S': 32.065, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.09",
		  "set type 2 charge 1.74",
		  "set type 3 charge -0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m123775_auto   #####
def m123775_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.056000 2.639733"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'H': 3, 'Ru': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'H': 1.00794, 'Ru': 101.07}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 2 charge 1.54",
		  "set type 3 charge -0.4",
		  "set type 4 charge -1.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m125002_auto   #####
def m125002_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.599000 3.976081",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'In': 3, 'Cl': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'In': 114.818, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.1",
		  "set type 3 charge 1.34",
		  "set type 4 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m125152_auto   #####
def m125152_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 1.26",
		  "set type 3 charge 1.66",
		  "set type 4 charge -1.18"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m125347_auto   #####
def m125347_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.005000 3.113691",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'Cu': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Cu': 63.546, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.53",
		  "set type 2 charge 2.81",
		  "set type 3 charge 1.48",
		  "set type 4 charge -1.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m125640_auto   #####
def m125640_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.309000 3.768502"]
    
    atom_types = {'K': 1, 'Li': 2, 'Ga': 3, 'As': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Ga': 69.723, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.6",
		  "set type 2 charge 0.48",
		  "set type 3 charge 0.62",
		  "set type 4 charge -1.15"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m126341_auto   #####
def m126341_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.227000 3.516377",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cl': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cl': 35.453, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 1 charge 0.85",
		  "set type 2 charge -0.73",
		  "set type 2 charge -0.73",
		  "set type 3 charge -1.8",
		  "set type 3 charge -1.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m126402_auto   #####
def m126402_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Al': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.18",
		  "set type 3 charge -0.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m127371_auto   #####
def m127371_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.044000 2.571134"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'B': 3, 'H': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 0.85",
		  "set type 3 charge -0.72",
		  "set type 4 charge -0.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m127930_auto   #####
def m127930_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'B': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 2 charge 0.82",
		  "set type 3 charge -0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m128423_auto   #####
def m128423_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 2.783168",
	       "pair_coeff 3 3 0.228000 2.537280",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Zr': 2, 'Cd': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Zr': 91.224, 'Cd': 112.411, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.03",
		  "set type 2 charge 2.62",
		  "set type 3 charge 1.7",
		  "set type 4 charge -0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m128734_auto   #####
def m128734_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'B': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'B': 10.811, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 1 charge 1.65",
		  "set type 2 charge 0.93",
		  "set type 3 charge -1.14",
		  "set type 4 charge 0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m129591_auto   #####
def m129591_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.47",
		  "set type 2 charge 0.57",
		  "set type 3 charge -0.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m129654_auto   #####
def m129654_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.067000 2.734168",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'W': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.38",
		  "set type 3 charge 1.98",
		  "set type 4 charge -0.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m130653_auto   #####
def m130653_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'V': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.04",
		  "set type 3 charge 1.74",
		  "set type 4 charge -0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m130961_auto   #####
def m130961_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 2.25",
		  "set type 3 charge 1.65",
		  "set type 4 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m131694_auto   #####
def m131694_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Cr': 2, 'F': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Cr': 51.9961, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.81",
		  "set type 2 charge 1.37",
		  "set type 3 charge -0.68",
		  "set type 4 charge 0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m132254_auto   #####
def m132254_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.26",
		  "set type 2 charge 0.19",
		  "set type 3 charge -0.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m132750_auto   #####
def m132750_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.251000 3.731975",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Br': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Br': 79.904, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 1 charge 0.76",
		  "set type 2 charge -0.82",
		  "set type 2 charge -0.82",
		  "set type 3 charge -2.26",
		  "set type 3 charge -2.26"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m132847_auto   #####
def m132847_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'H': 2, 'O': 3, 'Cl': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'O': 15.9994, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 0.36",
		  "set type 3 charge -0.88",
		  "set type 4 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m132889_auto   #####
def m132889_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.56",
		  "set type 3 charge 1.62",
		  "set type 4 charge -0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m133184_auto   #####
def m133184_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.72",
		  "set type 2 charge 1.61",
		  "set type 3 charge -1.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m134076_auto   #####
def m134076_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 2.4",
		  "set type 3 charge -1.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m134139_auto   #####
def m134139_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.041000 3.242871",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Lu': 3, 'Cl': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Lu': 174.9668, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge 0.88",
		  "set type 3 charge 1.35",
		  "set type 4 charge -0.59"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m134156_auto   #####
def m134156_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'W': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.84",
		  "set type 3 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m134302_auto   #####
def m134302_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 2.23",
		  "set type 3 charge 1.66",
		  "set type 4 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m134612_auto   #####
def m134612_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'In': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.44",
		  "set type 3 charge 1.96",
		  "set type 4 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m135222_auto   #####
def m135222_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.94",
		  "set type 2 charge 1.67",
		  "set type 3 charge -1.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m135608_auto   #####
def m135608_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'In': 2, 'Si': 3, 'Se': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Si': 28.0855, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.6",
		  "set type 2 charge 0.37",
		  "set type 3 charge 0.13",
		  "set type 4 charge -0.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m135735_auto   #####
def m135735_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.398000 3.982317"]
    
    atom_types = {'K': 1, 'Li': 2, 'Te': 3}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Te': 127.6}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.57",
		  "set type 1 charge 0.57",
		  "set type 2 charge 0.51",
		  "set type 2 charge 0.51",
		  "set type 3 charge -1.08",
		  "set type 3 charge -1.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m135961_auto   #####
def m135961_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.48",
		  "set type 2 charge 0.94",
		  "set type 3 charge -0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m136114_auto   #####
def m136114_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.339000 4.009044"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'I': 3}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.45",
		  "set type 2 charge 0.4",
		  "set type 3 charge -0.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m136213_auto   #####
def m136213_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'V': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 0.91",
		  "set type 3 charge 1.69",
		  "set type 4 charge -1.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m136418_auto   #####
def m136418_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64",
		  "set type 2 charge 0.34",
		  "set type 3 charge -0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m136489_auto   #####
def m136489_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.053000 2.609442",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Rh': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Rh': 102.9055, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.17",
		  "set type 3 charge 1.08",
		  "set type 4 charge -0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m137006_auto   #####
def m137006_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'In': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.11",
		  "set type 2 charge 2.04",
		  "set type 3 charge 2.58",
		  "set type 4 charge -1.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m137030_auto   #####
def m137030_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 2.783168",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Zr': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Zr': 91.224, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 2.32",
		  "set type 3 charge -0.71"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m137799_auto   #####
def m137799_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.017000 3.137745",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'La': 3, 'Cl': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'La': 138.90547, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 0.94",
		  "set type 3 charge 1.59",
		  "set type 4 charge -0.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m137875_auto   #####
def m137875_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 0.69",
		  "set type 3 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m138604_auto   #####
def m138604_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'N': 2, 'Cl': 3}

    atom_type_masses = {'Li': 6.941, 'N': 14.0067, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 1 charge 0.86",
		  "set type 2 charge -2.68",
		  "set type 2 charge -2.68",
		  "set type 3 charge -0.78",
		  "set type 3 charge -0.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m138768_auto   #####
def m138768_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Te': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'Te': 127.6, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.42",
		  "set type 3 charge -0.57"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m139053_auto   #####
def m139053_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'V': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 0.8",
		  "set type 3 charge 1.56",
		  "set type 4 charge -1.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m139227_auto   #####
def m139227_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.066000 2.631715",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Re': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Re': 186.207, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.81",
		  "set type 2 charge 1.64",
		  "set type 3 charge -1.01",
		  "set type 4 charge 0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m139305_auto   #####
def m139305_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Sb': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'Sb': 121.76, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge -1.21",
		  "set type 3 charge 0.57"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m139435_auto   #####
def m139435_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.09",
		  "set type 2 charge 0.59",
		  "set type 3 charge -1.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m139515_auto   #####
def m139515_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 3.34",
		  "set type 2 charge 3.95",
		  "set type 3 charge -7.3"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m140265_auto   #####
def m140265_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.663000 3.828192"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Pb': 3}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Pb': 207.2}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.36",
		  "set type 2 charge 0.35",
		  "set type 3 charge -0.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m140893_auto   #####
def m140893_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.415000 3.904809"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Ga': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Ga': 69.723}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.51",
		  "set type 2 charge 1.75",
		  "set type 3 charge -0.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m142124_auto   #####
def m142124_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.08",
		  "set type 2 charge 2.59",
		  "set type 3 charge -1.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m142162_auto   #####
def m142162_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.398000 3.982317"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Te': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Te': 127.6}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.68",
		  "set type 1 charge 0.68",
		  "set type 2 charge 0.67",
		  "set type 2 charge 0.67",
		  "set type 3 charge -1.36",
		  "set type 3 charge -1.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m142761_auto   #####
def m142761_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 2.21",
		  "set type 3 charge -1.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m143696_auto   #####
def m143696_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 1.73",
		  "set type 3 charge 1.87",
		  "set type 4 charge -1.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m144087_auto   #####
def m144087_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'H': 2, 'O': 3, 'Br': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'O': 15.9994, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64",
		  "set type 2 charge 0.3",
		  "set type 3 charge -0.92",
		  "set type 4 charge -0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m144172_auto   #####
def m144172_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 1.79",
		  "set type 3 charge 1.3",
		  "set type 4 charge -0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m144177_auto   #####
def m144177_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.080000 2.453535",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Pt': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Pt': 195.084, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 1.5",
		  "set type 3 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m144185_auto   #####
def m144185_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Sb': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Sb': 121.76, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.5",
		  "set type 2 charge 1.8",
		  "set type 3 charge -1.17",
		  "set type 4 charge 0.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m144187_auto   #####
def m144187_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.599000 3.976081",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'K': 1, 'Li': 2, 'In': 3, 'F': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'In': 114.818, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 0.99",
		  "set type 3 charge 1.58",
		  "set type 4 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m144465_auto   #####
def m144465_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.015000 2.524807",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ni': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ni': 58.6934, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.72",
		  "set type 2 charge 1.56",
		  "set type 3 charge 0.71",
		  "set type 4 charge -0.5"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m144503_auto   #####
def m144503_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'In': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.72",
		  "set type 2 charge 0.84",
		  "set type 3 charge -0.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m145203_auto   #####
def m145203_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.524807",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ni': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ni': 58.6934, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.32",
		  "set type 2 charge 2.3",
		  "set type 3 charge -2.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m145372_auto   #####
def m145372_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.017000 2.828603",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Ti': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 0.94",
		  "set type 3 charge 1.84",
		  "set type 4 charge -1.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m145386_auto   #####
def m145386_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.013000 2.594297",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Fe': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Fe': 55.845, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.51",
		  "set type 3 charge -0.56",
		  "set type 3 charge 1.05",
		  "set type 4 charge -0.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m145829_auto   #####
def m145829_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 1.46",
		  "set type 3 charge -2.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m145991_auto   #####
def m145991_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Si': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.51",
		  "set type 3 charge -1.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m146062_auto   #####
def m146062_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'H': 2, 'O': 3, 'Cl': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'O': 15.9994, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge 0.3",
		  "set type 3 charge -0.94",
		  "set type 4 charge -0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m146195_auto   #####
def m146195_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.449000 3.937772",
	       "pair_coeff 4 4 0.080000 2.453535"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Sb': 3, 'Pt': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Sb': 121.76, 'Pt': 195.084}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 0.89",
		  "set type 3 charge -3.09",
		  "set type 4 charge 1.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m147097_auto   #####
def m147097_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'P': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'P': 30.973762, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.23",
		  "set type 2 charge -0.17",
		  "set type 3 charge 0.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m148028_auto   #####
def m148028_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Ge': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Ge': 72.64, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.45",
		  "set type 3 charge 0.12",
		  "set type 4 charge -0.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m148127_auto   #####
def m148127_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.14",
		  "set type 2 charge 2.28",
		  "set type 3 charge -0.57"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m148274_auto   #####
def m148274_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 1.37",
		  "set type 3 charge 0.7",
		  "set type 4 charge -0.71"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m148422_auto   #####
def m148422_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.21",
		  "set type 2 charge 0.46",
		  "set type 3 charge -0.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m148514_auto   #####
def m148514_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.339000 4.009044"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'I': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64",
		  "set type 2 charge 0.16",
		  "set type 3 charge -0.27"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m148777_auto   #####
def m148777_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.27",
		  "set type 3 charge 1.44",
		  "set type 4 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m149107_auto   #####
def m149107_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.006000 3.005892",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Tm': 3, 'Cl': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Tm': 168.93421, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 0.99",
		  "set type 3 charge 1.43",
		  "set type 4 charge -0.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m149810_auto   #####
def m149810_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 3.168036",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ce': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ce': 140.116, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 2.36",
		  "set type 3 charge -1.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m149930_auto   #####
def m149930_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.036000 2.804549"]
    
    atom_types = {'Li': 1, 'In': 2, 'Ag': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Ag': 107.8682}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.57",
		  "set type 2 charge -2.22",
		  "set type 3 charge 1.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m150255_auto   #####
def m150255_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.798313",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Hf': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Hf': 178.49, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 2.83",
		  "set type 3 charge -2.38"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m151885_auto   #####
def m151885_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 0.83",
		  "set type 3 charge -1.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m152017_auto   #####
def m152017_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'As': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'As': 74.9216, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.03",
		  "set type 2 charge -0.39",
		  "set type 3 charge 0.37"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m152760_auto   #####
def m152760_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.080000 2.453535"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Pt': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Pt': 195.084}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.08",
		  "set type 2 charge 0.04",
		  "set type 3 charge -0.2"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m153454_auto   #####
def m153454_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.048000 2.582715",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Pd': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Pd': 106.42, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 1.81",
		  "set type 3 charge -0.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m154091_auto   #####
def m154091_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.251000 3.731975",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Br': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Br': 79.904, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 1 charge 0.8",
		  "set type 2 charge -0.87",
		  "set type 2 charge -0.87",
		  "set type 3 charge -2.16",
		  "set type 3 charge -2.16"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m154166_auto   #####
def m154166_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.036000 2.804549"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Ag': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Ag': 107.8682}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.63",
		  "set type 2 charge -2.49",
		  "set type 3 charge 1.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m154261_auto   #####
def m154261_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.08",
		  "set type 2 charge 2.56",
		  "set type 3 charge -4.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m154368_auto   #####
def m154368_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'B': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'B': 10.811, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.38",
		  "set type 2 charge 1.32",
		  "set type 3 charge 0.48",
		  "set type 4 charge -1.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m154443_auto   #####
def m154443_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Be': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 1.33",
		  "set type 3 charge 1.55",
		  "set type 4 charge -1.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m154570_auto   #####
def m154570_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Al': 2, 'P': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'P': 30.973762, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.38",
		  "set type 2 charge 0.98",
		  "set type 3 charge 0.12",
		  "set type 4 charge -0.27"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m154670_auto   #####
def m154670_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge -1.07",
		  "set type 2 charge 1.39",
		  "set type 3 charge -1.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m154795_auto   #####
def m154795_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'K': 1, 'Li': 2, 'Ga': 3, 'F': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Ga': 69.723, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 0.95",
		  "set type 3 charge 1.48",
		  "set type 4 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m155230_auto   #####
def m155230_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.94",
		  "set type 3 charge 0.33",
		  "set type 4 charge -1.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m155672_auto   #####
def m155672_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.680000 3.872737",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'Tl': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'Tl': 204.3833, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.05",
		  "set type 2 charge 0.67",
		  "set type 3 charge -0.31"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m155780_auto   #####
def m155780_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Sn': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.6",
		  "set type 2 charge 0.66",
		  "set type 3 charge -0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m156188_auto   #####
def m156188_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 0.6",
		  "set type 3 charge 1.91",
		  "set type 4 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m156227_auto   #####
def m156227_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Ge': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Ge': 72.64, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 0.91",
		  "set type 3 charge 0.93",
		  "set type 4 charge -0.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m156367_auto   #####
def m156367_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Si': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 2.06",
		  "set type 3 charge 1.77",
		  "set type 4 charge -1.18"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m156767_auto   #####
def m156767_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.398000 3.982317"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Te': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Te': 127.6}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.63",
		  "set type 2 charge 0.44",
		  "set type 3 charge -0.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m156912_auto   #####
def m156912_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'N': 3, 'Cl': 4}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'N': 14.0067, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.47",
		  "set type 3 charge -1.53",
		  "set type 4 charge -0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m156914_auto   #####
def m156914_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'La': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.08",
		  "set type 2 charge 2.34",
		  "set type 3 charge -2.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m157625_auto   #####
def m157625_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'H': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 1 charge 0.98",
		  "set type 2 charge 0.45",
		  "set type 2 charge 0.45",
		  "set type 3 charge -0.71",
		  "set type 3 charge -0.71"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m157696_auto   #####
def m157696_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.518000 3.893227"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Bi': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Bi': 208.9804}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 1.31",
		  "set type 3 charge -2.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m157724_auto   #####
def m157724_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'B': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.06",
		  "set type 2 charge 1.41",
		  "set type 3 charge -1.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m157803_auto   #####
def m157803_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Se': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 1 charge 0.66",
		  "set type 2 charge 0.69",
		  "set type 2 charge 0.69",
		  "set type 3 charge -1.35",
		  "set type 3 charge -1.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m157999_auto   #####
def m157999_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.449000 3.937772",
	       "pair_coeff 4 4 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Sb': 3, 'Pd': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Sb': 121.76, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.52",
		  "set type 3 charge -2.81",
		  "set type 4 charge 0.38"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m158205_auto   #####
def m158205_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.37",
		  "set type 1 charge 0.37",
		  "set type 2 charge 0.51",
		  "set type 2 charge 0.51",
		  "set type 3 charge -0.44",
		  "set type 3 charge -0.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m158217_auto   #####
def m158217_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'P': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.24",
		  "set type 2 charge 2.14",
		  "set type 3 charge -0.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m158369_auto   #####
def m158369_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.639733",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ru': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 2.11",
		  "set type 3 charge -1.57"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m158607_auto   #####
def m158607_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 3.168036",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ce': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Ce': 140.116, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.49",
		  "set type 2 charge 4.08",
		  "set type 3 charge -3.53"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m159118_auto   #####
def m159118_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 0.91",
		  "set type 3 charge -0.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m159376_auto   #####
def m159376_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.87",
		  "set type 3 charge 0.95",
		  "set type 4 charge -1.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m159565_auto   #####
def m159565_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'H': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.05",
		  "set type 1 charge -0.05",
		  "set type 2 charge 1.4",
		  "set type 2 charge 1.4",
		  "set type 3 charge -1.35",
		  "set type 3 charge -1.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m159676_auto   #####
def m159676_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.005000 3.113691",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'K': 1, 'Li': 2, 'Cu': 3, 'F': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Cu': 63.546, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.98",
		  "set type 3 charge 1.36",
		  "set type 4 charge -0.65"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m159811_auto   #####
def m159811_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Cl': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 1 charge 0.88",
		  "set type 2 charge 0.84",
		  "set type 2 charge 0.84",
		  "set type 3 charge -0.85",
		  "set type 3 charge -0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m160017_auto   #####
def m160017_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.663000 3.828192"]
    
    atom_types = {'K': 1, 'Li': 2, 'Pb': 3}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Pb': 207.2}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.33",
		  "set type 2 charge 0.33",
		  "set type 3 charge -0.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m160779_auto   #####
def m160779_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.518000 3.893227",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Bi': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Bi': 208.9804, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.13",
		  "set type 2 charge 0.99",
		  "set type 3 charge 2.81",
		  "set type 4 charge -1.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m160793_auto   #####
def m160793_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.81",
		  "set type 3 charge -0.59"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m161371_auto   #####
def m161371_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.56",
		  "set type 2 charge 0.35",
		  "set type 3 charge -1.46"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m161667_auto   #####
def m161667_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'La': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge 2.08",
		  "set type 3 charge -2.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m161999_auto   #####
def m161999_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'P': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.58",
		  "set type 2 charge 1.14",
		  "set type 3 charge -0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m162177_auto   #####
def m162177_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.072000 2.980056",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Y': 3, 'Br': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Y': 88.90585, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 0.94",
		  "set type 3 charge 1.4",
		  "set type 4 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m162610_auto   #####
def m162610_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Bi': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Bi': 208.9804, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.6",
		  "set type 2 charge 1.21",
		  "set type 3 charge -0.93",
		  "set type 4 charge 1.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m162983_auto   #####
def m162983_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'B': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -8.78",
		  "set type 2 charge -0.64",
		  "set type 3 charge 2.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m163113_auto   #####
def m163113_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.080000 2.453535"]
    
    atom_types = {'Li': 1, 'B': 2, 'Pt': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'Pt': 195.084}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.04",
		  "set type 2 charge 0.02",
		  "set type 3 charge -0.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m163376_auto   #####
def m163376_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'B': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'B': 10.811, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.41",
		  "set type 2 charge 0.36",
		  "set type 3 charge -1.24",
		  "set type 4 charge 0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m164405_auto   #####
def m164405_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 0.75",
		  "set type 3 charge 0.91",
		  "set type 4 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m164675_auto   #####
def m164675_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge 0.9",
		  "set type 3 charge 0.33",
		  "set type 4 charge -1.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m164763_auto   #####
def m164763_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.105000 3.430851",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'C': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.85",
		  "set type 3 charge 1.38",
		  "set type 4 charge -0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m164874_auto   #####
def m164874_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.524807",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ni': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ni': 58.6934, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.15",
		  "set type 2 charge 2.28",
		  "set type 3 charge -1.53"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m165030_auto   #####
def m165030_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ga': 2, 'F': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Ga': 69.723, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.75",
		  "set type 2 charge 1.11",
		  "set type 3 charge -0.62",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m165277_auto   #####
def m165277_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.599000 3.976081",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'In': 3, 'Br': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'In': 114.818, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.62",
		  "set type 2 charge 0.42",
		  "set type 3 charge 0.25",
		  "set type 4 charge -0.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m165333_auto   #####
def m165333_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.43",
		  "set type 2 charge 0.58",
		  "set type 3 charge -0.51"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m165546_auto   #####
def m165546_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.039000 2.933729"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Au': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.25",
		  "set type 2 charge -0.26",
		  "set type 3 charge 0.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m166747_auto   #####
def m166747_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.053000 2.609442"]
    
    atom_types = {'Li': 1, 'In': 2, 'Rh': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Rh': 102.9055}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge -2.43",
		  "set type 3 charge 1.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m166890_auto   #####
def m166890_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.23",
		  "set type 2 charge -0.54",
		  "set type 3 charge -0.69"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m167716_auto   #####
def m167716_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 1.55",
		  "set type 3 charge 1.43",
		  "set type 4 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m167754_auto   #####
def m167754_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'H': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'H': 1.00794, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 0.69",
		  "set type 3 charge 0.26",
		  "set type 4 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m168005_auto   #####
def m168005_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.71",
		  "set type 2 charge -0.34",
		  "set type 3 charge 0.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m168667_auto   #####
def m168667_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.036000 2.804549",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Ag': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Ag': 107.8682, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 1.12",
		  "set type 3 charge -2.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m168952_auto   #####
def m168952_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 2.86",
		  "set type 3 charge -1.26"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m169156_auto   #####
def m169156_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.524807",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Ni': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Ni': 58.6934, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.34",
		  "set type 2 charge 11.73",
		  "set type 3 charge -4.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m169596_auto   #####
def m169596_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'K': 1, 'Li': 2, 'As': 3}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.44",
		  "set type 1 charge 0.44",
		  "set type 2 charge 0.42",
		  "set type 2 charge 0.42",
		  "set type 3 charge -1.28",
		  "set type 3 charge -1.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m169728_auto   #####
def m169728_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.518000 3.893227"]
    
    atom_types = {'Li': 1, 'La': 2, 'Bi': 3}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Bi': 208.9804}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.34",
		  "set type 2 charge 0.87",
		  "set type 3 charge -0.61"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m169819_auto   #####
def m169819_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.339000 4.009044"]
    
    atom_types = {'Li': 1, 'H': 2, 'O': 3, 'I': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'O': 15.9994, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 0.36",
		  "set type 3 charge -0.92",
		  "set type 4 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m169911_auto   #####
def m169911_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.007000 3.037074",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Ho': 3, 'Cl': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Ho': 164.93032, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 0.88",
		  "set type 3 charge 1.39",
		  "set type 4 charge -0.61"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m170235_auto   #####
def m170235_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.036000 2.804549",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Ag': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Ag': 107.8682, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.27",
		  "set type 2 charge 0.14",
		  "set type 3 charge -0.41"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m171068_auto   #####
def m171068_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'B': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge -0.27",
		  "set type 3 charge -0.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m171235_auto   #####
def m171235_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ge': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ge': 72.64, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 2 charge 1.91",
		  "set type 3 charge 1.62",
		  "set type 4 charge -1.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m172513_auto   #####
def m172513_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.680000 3.872737"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Tl': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Tl': 204.3833}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.1",
		  "set type 2 charge 1.78",
		  "set type 3 charge -3.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m172594_auto   #####
def m172594_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'N': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.22",
		  "set type 2 charge 0.75",
		  "set type 3 charge -0.09"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m172689_auto   #####
def m172689_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'In': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge -2.11",
		  "set type 3 charge 1.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m172866_auto   #####
def m172866_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge -0.08",
		  "set type 3 charge -1.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m172967_auto   #####
def m172967_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'B': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge -0.5",
		  "set type 3 charge -0.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m174086_auto   #####
def m174086_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Ga': 3, 'F': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Ga': 69.723, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 0.72",
		  "set type 3 charge 1.16",
		  "set type 4 charge -0.6"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m174219_auto   #####
def m174219_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.12",
		  "set type 2 charge 3.01",
		  "set type 3 charge -1.37"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m174432_auto   #####
def m174432_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.518000 3.893227"]
    
    atom_types = {'Li': 1, 'La': 2, 'Bi': 3}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Bi': 208.9804}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 2.34",
		  "set type 3 charge -2.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m174695_auto   #####
def m174695_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.29",
		  "set type 2 charge 2.73",
		  "set type 3 charge 4.72",
		  "set type 4 charge -2.51"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m175063_auto   #####
def m175063_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'S': 3}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.59",
		  "set type 1 charge 0.59",
		  "set type 2 charge 0.64",
		  "set type 2 charge 0.64",
		  "set type 3 charge -1.23",
		  "set type 3 charge -1.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m175677_auto   #####
def m175677_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.47",
		  "set type 2 charge 2.35",
		  "set type 3 charge -3.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m176568_auto   #####
def m176568_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 1 charge 0.74",
		  "set type 2 charge 0.87",
		  "set type 2 charge 0.87",
		  "set type 3 charge -0.81",
		  "set type 3 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m177426_auto   #####
def m177426_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.039000 2.933729"]
    
    atom_types = {'Li': 1, 'Bi': 2, 'Au': 3}

    atom_type_masses = {'Li': 6.941, 'Bi': 208.9804, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.59",
		  "set type 2 charge -1.67",
		  "set type 3 charge 0.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m177459_auto   #####
def m177459_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'K': 1, 'Li': 2, 'Al': 3, 'F': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Al': 26.9815386, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.9",
		  "set type 3 charge 1.52",
		  "set type 4 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m177589_auto   #####
def m177589_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Y': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 2.42",
		  "set type 3 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m177623_auto   #####
def m177623_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.567000 3.912827",
	       "pair_coeff 4 4 0.039000 2.933729"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Sn': 3, 'Au': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Sn': 118.71, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge 0.93",
		  "set type 3 charge -1.95",
		  "set type 4 charge 0.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m177970_auto   #####
def m177970_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.61",
		  "set type 2 charge 0.86",
		  "set type 3 charge -1.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m178223_auto   #####
def m178223_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.38",
		  "set type 3 charge -2.25"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m179468_auto   #####
def m179468_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.49",
		  "set type 2 charge 2.27",
		  "set type 3 charge -3.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m179970_auto   #####
def m179970_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'N': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.48",
		  "set type 2 charge -2.17",
		  "set type 3 charge 0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m180054_auto   #####
def m180054_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Mg': 2, 'Ge': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Mg': 24.305, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.38",
		  "set type 2 charge 0.3",
		  "set type 3 charge -0.68",
		  "set type 4 charge 0.2"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m180294_auto   #####
def m180294_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.518000 3.893227"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Bi': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Bi': 208.9804}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.42",
		  "set type 2 charge 2.2",
		  "set type 3 charge -3.61"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m180720_auto   #####
def m180720_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.18",
		  "set type 2 charge 1.38",
		  "set type 3 charge -2.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m181083_auto   #####
def m181083_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.449000 3.937772",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Sb': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Sb': 121.76, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.11",
		  "set type 2 charge 1.45",
		  "set type 3 charge 2.45",
		  "set type 4 charge -1.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m181171_auto   #####
def m181171_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.518000 3.893227",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Bi': 3, 'Cl': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Bi': 208.9804, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 0.93",
		  "set type 3 charge 1.29",
		  "set type 4 charge -0.6"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m181463_auto   #####
def m181463_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'C': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.24",
		  "set type 2 charge 1.59",
		  "set type 3 charge -2.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m181473_auto   #####
def m181473_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'V': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge 1.07",
		  "set type 3 charge -0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m181972_auto   #####
def m181972_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'P': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'P': 30.973762, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.38",
		  "set type 2 charge -0.98",
		  "set type 3 charge 0.6"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m182453_auto   #####
def m182453_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'In': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.59",
		  "set type 3 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m182537_auto   #####
def m182537_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.44",
		  "set type 2 charge 2.32",
		  "set type 3 charge -3.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m183553_auto   #####
def m183553_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.039000 2.933729",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Au': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Au': 196.966569, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 0.32",
		  "set type 3 charge -1.51"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m183594_auto   #####
def m183594_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'V': 3, 'Br': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'V': 50.9415, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.39",
		  "set type 3 charge 0.4",
		  "set type 4 charge -0.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m183681_auto   #####
def m183681_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.339000 4.009044",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'I': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'I': 126.90447, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.95",
		  "set type 3 charge -0.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m183834_auto   #####
def m183834_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.036000 2.804549",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Ag': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Ag': 107.8682, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 0.01",
		  "set type 3 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m184388_auto   #####
def m184388_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.053000 2.609442"]
    
    atom_types = {'Li': 1, 'Si': 2, 'Rh': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'Rh': 102.9055}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.56",
		  "set type 2 charge -1.61",
		  "set type 3 charge 1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m184521_auto   #####
def m184521_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.036000 2.804549",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ag': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ag': 107.8682, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 0.41",
		  "set type 3 charge -1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m185103_auto   #####
def m185103_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.044000 2.571134"]
    
    atom_types = {'K': 1, 'Li': 2, 'Al': 3, 'H': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Al': 26.9815386, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 1 charge 0.69",
		  "set type 2 charge 0.57",
		  "set type 2 charge 0.57",
		  "set type 3 charge -0.05",
		  "set type 3 charge -0.05",
		  "set type 4 charge -0.32",
		  "set type 4 charge -0.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m185334_auto   #####
def m185334_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 1.99",
		  "set type 3 charge -0.65"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m185584_auto   #####
def m185584_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.449000 3.937772",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Sb': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Sb': 121.76, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 1.61",
		  "set type 3 charge 1.97",
		  "set type 4 charge -1.27"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m186054_auto   #####
def m186054_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.274000 3.594776",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'S': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'S': 32.065, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 1 charge 0.99",
		  "set type 2 charge -1.99",
		  "set type 2 charge -1.99",
		  "set type 3 charge -2.96",
		  "set type 3 charge -2.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m186222_auto   #####
def m186222_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'H': 2, 'O': 3, 'Br': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'O': 15.9994, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 0.38",
		  "set type 3 charge -0.95",
		  "set type 4 charge -0.59"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m186544_auto   #####
def m186544_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'In': 2, 'Ge': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'In': 114.818, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.2",
		  "set type 2 charge 0.16",
		  "set type 3 charge -1.54",
		  "set type 4 charge 0.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m186820_auto   #####
def m186820_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Al': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 1 charge 0.99",
		  "set type 2 charge 1.16",
		  "set type 2 charge 1.16",
		  "set type 3 charge -0.69",
		  "set type 3 charge -0.69"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m186923_auto   #####
def m186923_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.599000 3.976081",
	       "pair_coeff 4 4 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'In': 3, 'Ge': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'In': 114.818, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.63",
		  "set type 2 charge 1.04",
		  "set type 3 charge 0.41",
		  "set type 4 charge -1.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m187074_auto   #####
def m187074_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.37",
		  "set type 2 charge -0.99",
		  "set type 3 charge 1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m187787_auto   #####
def m187787_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.26",
		  "set type 3 charge 1.68",
		  "set type 4 charge -1.19"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m187923_auto   #####
def m187923_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.039000 2.933729"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Au': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.6",
		  "set type 2 charge -1.79",
		  "set type 3 charge 0.59"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m188285_auto   #####
def m188285_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.007000 3.037074",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Ho': 3, 'Br': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Ho': 164.93032, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.72",
		  "set type 2 charge 0.92",
		  "set type 3 charge 1.35",
		  "set type 4 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m188445_auto   #####
def m188445_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.08",
		  "set type 2 charge -0.04",
		  "set type 3 charge 0.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m188811_auto   #####
def m188811_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 2.783168",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Zr': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Zr': 91.224, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.03",
		  "set type 2 charge -0.39",
		  "set type 3 charge 0.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m189075_auto   #####
def m189075_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.013000 2.637951",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Mn': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Mn': 54.938045, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.63",
		  "set type 3 charge 1.28",
		  "set type 4 charge -1.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m189143_auto   #####
def m189143_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'In': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 1 charge 0.9",
		  "set type 2 charge 1.35",
		  "set type 2 charge 1.35",
		  "set type 3 charge -1.13",
		  "set type 3 charge -1.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m189353_auto   #####
def m189353_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.067000 2.734168",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'In': 2, 'W': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.09",
		  "set type 2 charge 1.95",
		  "set type 3 charge 2.67",
		  "set type 4 charge -1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m189767_auto   #####
def m189767_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.251000 3.731975",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Br': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Br': 79.904, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 1 charge 0.9",
		  "set type 2 charge -0.95",
		  "set type 2 charge -0.95",
		  "set type 3 charge -2.55",
		  "set type 3 charge -2.55"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m189995_auto   #####
def m189995_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.059000 2.819694",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Nb': 3, 'S': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Nb': 92.90638, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 0.56",
		  "set type 3 charge 0.91",
		  "set type 4 charge -0.71"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m190280_auto   #####
def m190280_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'W': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.04",
		  "set type 2 charge 2.78",
		  "set type 3 charge -1.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m190298_auto   #####
def m190298_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.83",
		  "set type 3 charge 1.26",
		  "set type 4 charge -1.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m190429_auto   #####
def m190429_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Be': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 1.52",
		  "set type 3 charge 1.61",
		  "set type 4 charge -1.25"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m190701_auto   #####
def m190701_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.056000 2.639733",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ru': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Ru': 101.07, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.55",
		  "set type 2 charge 1.44",
		  "set type 3 charge -1.15",
		  "set type 4 charge 0.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m190957_auto   #####
def m190957_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Te': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Te': 127.6, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 2.19",
		  "set type 3 charge -1.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m191031_auto   #####
def m191031_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.719023",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Mo': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'Mo': 95.96, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.58",
		  "set type 2 charge 0.11",
		  "set type 3 charge -0.31"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m191261_auto   #####
def m191261_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.54",
		  "set type 3 charge -1.22"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m191317_auto   #####
def m191317_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'B': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 0.66",
		  "set type 3 charge -1.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m191347_auto   #####
def m191347_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.8",
		  "set type 3 charge 1.16",
		  "set type 4 charge -1.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m191451_auto   #####
def m191451_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.066000 2.631715",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Re': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Re': 186.207, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.57",
		  "set type 2 charge 2.26",
		  "set type 3 charge -1.58",
		  "set type 4 charge 0.92"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m191777_auto   #####
def m191777_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Ge': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Ge': 72.64, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 1.05",
		  "set type 3 charge 1.0",
		  "set type 4 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m192240_auto   #####
def m192240_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'H': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'H': 1.00794, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.48",
		  "set type 2 charge -0.73",
		  "set type 3 charge 0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m192302_auto   #####
def m192302_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.46",
		  "set type 2 charge 2.06",
		  "set type 3 charge -3.51"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m192506_auto   #####
def m192506_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Be': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.35",
		  "set type 3 charge -2.31"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m192843_auto   #####
def m192843_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'In': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.13",
		  "set type 2 charge -1.1",
		  "set type 3 charge 1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m193205_auto   #####
def m193205_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.044000 2.571134"]
    
    atom_types = {'K': 1, 'Li': 2, 'Al': 3, 'H': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Al': 26.9815386, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.47",
		  "set type 1 charge 0.47",
		  "set type 2 charge 0.87",
		  "set type 2 charge 0.87",
		  "set type 3 charge 0.59",
		  "set type 3 charge 0.59",
		  "set type 4 charge -0.4",
		  "set type 4 charge -0.4"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m193349_auto   #####
def m193349_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 0.91",
		  "set type 3 charge -0.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m193434_auto   #####
def m193434_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.053000 2.609442",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Rh': 3, 'Cl': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Rh': 102.9055, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.43",
		  "set type 3 charge 0.18",
		  "set type 4 charge -0.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m193464_auto   #####
def m193464_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Si': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 1.45",
		  "set type 3 charge -0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m193668_auto   #####
def m193668_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'V': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 1.19",
		  "set type 3 charge -0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m193851_auto   #####
def m193851_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'As': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'As': 74.9216, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.13",
		  "set type 2 charge 1.81",
		  "set type 3 charge -0.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m193866_auto   #####
def m193866_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'In': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 1 charge 0.87",
		  "set type 2 charge 1.14",
		  "set type 2 charge 1.14",
		  "set type 3 charge -1.01",
		  "set type 3 charge -1.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m193885_auto   #####
def m193885_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge 0.63",
		  "set type 3 charge -1.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m194186_auto   #####
def m194186_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'B': 2, 'S': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'B': 10.811, 'S': 32.065, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.63",
		  "set type 1 charge 1.27",
		  "set type 2 charge 0.06",
		  "set type 3 charge -0.63",
		  "set type 4 charge 0.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m194296_auto   #####
def m194296_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'In': 2, 'Si': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Si': 28.0855, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.51",
		  "set type 3 charge -0.42",
		  "set type 3 charge 0.23",
		  "set type 4 charge -0.42"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m194623_auto   #####
def m194623_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.039000 2.933729"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Au': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.1",
		  "set type 2 charge 0.11",
		  "set type 3 charge -0.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m194871_auto   #####
def m194871_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64",
		  "set type 2 charge 0.87",
		  "set type 3 charge -0.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m194890_auto   #####
def m194890_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'In': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.35",
		  "set type 3 charge -0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m195409_auto   #####
def m195409_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 1.87",
		  "set type 3 charge -0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m195442_auto   #####
def m195442_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'As': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.66",
		  "set type 3 charge -1.09"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m195927_auto   #####
def m195927_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Si': 2, 'N': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'N': 14.0067, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 1.21",
		  "set type 3 charge -0.92",
		  "set type 4 charge -1.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m196364_auto   #####
def m196364_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.073000 2.530152",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Ir': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Ir': 192.217, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.19",
		  "set type 2 charge 0.92",
		  "set type 3 charge 2.56",
		  "set type 4 charge -1.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m196704_auto   #####
def m196704_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.72",
		  "set type 2 charge 1.19",
		  "set type 3 charge -1.15",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m197177_auto   #####
def m197177_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.228000 2.537280",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'Cd': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'Cd': 112.411, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 1.15",
		  "set type 3 charge 1.49",
		  "set type 4 charge -0.57"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m197178_auto   #####
def m197178_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.039000 2.933729",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Au': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Au': 196.966569, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 0.9",
		  "set type 3 charge -0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m197216_auto   #####
def m197216_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.009000 3.000547",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Gd': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Gd': 157.25, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.2",
		  "set type 2 charge 1.15",
		  "set type 3 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m197352_auto   #####
def m197352_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ta': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Ta': 180.94788, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.02",
		  "set type 2 charge 2.72",
		  "set type 3 charge -1.35",
		  "set type 4 charge 0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m197386_auto   #####
def m197386_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.28",
		  "set type 3 charge -1.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m197487_auto   #####
def m197487_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'S': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'S': 32.065, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 0.84",
		  "set type 3 charge 1.14",
		  "set type 4 charge -0.71"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m197930_auto   #####
def m197930_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.053000 2.609442",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'In': 2, 'Rh': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Rh': 102.9055, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.53",
		  "set type 3 charge 1.46",
		  "set type 4 charge -1.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m198043_auto   #####
def m198043_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'B': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'B': 10.811, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.45",
		  "set type 1 charge 1.54",
		  "set type 2 charge 0.45",
		  "set type 3 charge -1.38",
		  "set type 4 charge 0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m198162_auto   #####
def m198162_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.305000 3.694557"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Al': 3, 'P': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Al': 26.9815386, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 0.53",
		  "set type 3 charge 0.87",
		  "set type 4 charge -1.41"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m198169_auto   #####
def m198169_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'W': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.84",
		  "set type 3 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m198195_auto   #####
def m198195_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.663000 3.828192"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Pb': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Pb': 207.2}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.4",
		  "set type 2 charge 0.39",
		  "set type 3 charge -0.4"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m198434_auto   #####
def m198434_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'B': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'B': 10.811, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.58",
		  "set type 2 charge 0.99",
		  "set type 3 charge -1.14",
		  "set type 4 charge 0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m198501_auto   #####
def m198501_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.35",
		  "set type 3 charge 1.46",
		  "set type 4 charge -0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m198684_auto   #####
def m198684_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.056000 2.639733"]
    
    atom_types = {'Li': 1, 'H': 2, 'Ru': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'Ru': 101.07}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge -0.34",
		  "set type 3 charge -1.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m198910_auto   #####
def m198910_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'B': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge -0.63",
		  "set type 3 charge -0.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m199134_auto   #####
def m199134_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.567000 3.912827",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Sn': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Sn': 118.71, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 1.0",
		  "set type 3 charge -0.88",
		  "set type 3 charge 0.96",
		  "set type 4 charge -0.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m200043_auto   #####
def m200043_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ga': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ga': 69.723, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 1.53",
		  "set type 3 charge 0.64",
		  "set type 4 charge -0.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m200575_auto   #####
def m200575_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Y': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.05",
		  "set type 2 charge 0.31",
		  "set type 3 charge -0.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m200651_auto   #####
def m200651_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 1.78",
		  "set type 3 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m202545_auto   #####
def m202545_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.663000 3.828192"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Pb': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Pb': 207.2}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.5",
		  "set type 2 charge 0.96",
		  "set type 3 charge -1.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m203092_auto   #####
def m203092_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Sb': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.58",
		  "set type 1 charge 0.58",
		  "set type 2 charge 0.88",
		  "set type 2 charge 0.88",
		  "set type 3 charge -2.34",
		  "set type 3 charge -2.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m203157_auto   #####
def m203157_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'Si': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.48",
		  "set type 2 charge 0.54",
		  "set type 3 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m203215_auto   #####
def m203215_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.039000 2.933729"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'Au': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.58",
		  "set type 2 charge -1.79",
		  "set type 3 charge 0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m203218_auto   #####
def m203218_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Sr': 1, 'Li': 2, 'H': 3}

    atom_type_masses = {'Sr': 87.62, 'Li': 6.941, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.09",
		  "set type 1 charge 0.09",
		  "set type 2 charge 1.0",
		  "set type 2 charge 1.0",
		  "set type 3 charge -0.36",
		  "set type 3 charge -0.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m203219_auto   #####
def m203219_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.59",
		  "set type 2 charge 1.0",
		  "set type 3 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m203901_auto   #####
def m203901_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.44",
		  "set type 2 charge 2.3",
		  "set type 3 charge -3.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m204630_auto   #####
def m204630_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.19",
		  "set type 2 charge 2.27",
		  "set type 3 charge -0.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m204846_auto   #####
def m204846_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.105000 3.430851",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'B': 2, 'C': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'C': 12.0107, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge -0.02",
		  "set type 3 charge 0.25",
		  "set type 4 charge -0.42"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m205113_auto   #####
def m205113_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.63",
		  "set type 1 charge 0.63",
		  "set type 2 charge 1.01",
		  "set type 2 charge 1.01",
		  "set type 3 charge -0.82",
		  "set type 3 charge -0.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m205407_auto   #####
def m205407_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Al': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 0.17",
		  "set type 3 charge -0.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m205497_auto   #####
def m205497_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'C': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.61",
		  "set type 2 charge -0.17",
		  "set type 3 charge -0.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m206808_auto   #####
def m206808_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.45",
		  "set type 3 charge 2.27",
		  "set type 4 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m207597_auto   #####
def m207597_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.385000 2.409881",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Hg': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Hg': 200.59, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.31",
		  "set type 2 charge 0.32",
		  "set type 3 charge -0.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m208800_auto   #####
def m208800_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.39",
		  "set type 2 charge -0.36",
		  "set type 3 charge -0.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m208814_auto   #####
def m208814_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Sb': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'Sb': 121.76, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.36",
		  "set type 2 charge -1.72",
		  "set type 3 charge 0.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m209768_auto   #####
def m209768_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.41",
		  "set type 2 charge -0.15",
		  "set type 3 charge 0.2"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m209783_auto   #####
def m209783_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'P': 2, 'N': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'N': 14.0067, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 1.32",
		  "set type 3 charge -0.98",
		  "set type 4 charge -1.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m210012_auto   #####
def m210012_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.49",
		  "set type 2 charge 0.84",
		  "set type 3 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m210137_auto   #####
def m210137_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.008000 3.111909",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Eu': 3, 'Br': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Eu': 151.964, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.95",
		  "set type 3 charge 1.38",
		  "set type 4 charge -0.63"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m210715_auto   #####
def m210715_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Si': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'Si': 28.0855, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.28",
		  "set type 2 charge -0.66",
		  "set type 3 charge 0.19"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m211300_auto   #####
def m211300_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.51",
		  "set type 2 charge 0.11",
		  "set type 3 charge -0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m211501_auto   #####
def m211501_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.019000 2.935511",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Sc': 3, 'Br': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Sc': 44.955912, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.58",
		  "set type 2 charge 0.4",
		  "set type 3 charge 0.56",
		  "set type 4 charge -0.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m212318_auto   #####
def m212318_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 1.66",
		  "set type 3 charge -2.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m212923_auto   #####
def m212923_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.228000 2.537280"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Cd': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Cd': 112.411}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.46",
		  "set type 1 charge 0.46",
		  "set type 2 charge -0.45",
		  "set type 2 charge -0.45",
		  "set type 3 charge -0.47",
		  "set type 3 charge -0.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m212968_auto   #####
def m212968_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'V': 3, 'Cl': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'V': 50.9415, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 0.92",
		  "set type 3 charge 1.21",
		  "set type 4 charge -0.61"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m213194_auto   #####
def m213194_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.039000 2.933729",
	       "pair_coeff 3 3 0.105000 3.430851"]
    
    atom_types = {'Li': 1, 'Au': 2, 'C': 3}

    atom_type_masses = {'Li': 6.941, 'Au': 196.966569, 'C': 12.0107}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge -0.16",
		  "set type 3 charge -0.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m213210_auto   #####
def m213210_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.080000 2.453535"]
    
    atom_types = {'Li': 1, 'H': 2, 'Pt': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'Pt': 195.084}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.59",
		  "set type 2 charge -0.16",
		  "set type 3 charge -0.18"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m213532_auto   #####
def m213532_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Bi': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Bi': 208.9804, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.12",
		  "set type 2 charge 2.11",
		  "set type 3 charge -0.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m214080_auto   #####
def m214080_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge -3.55",
		  "set type 3 charge 0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m214081_auto   #####
def m214081_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.008000 3.111909",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Eu': 3, 'Cl': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Eu': 151.964, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 0.91",
		  "set type 3 charge 1.45",
		  "set type 4 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m214406_auto   #####
def m214406_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.415000 3.904809"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Ga': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Ga': 69.723}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.01",
		  "set type 2 charge 1.82",
		  "set type 3 charge -3.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m214960_auto   #####
def m214960_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 1.4",
		  "set type 3 charge -2.3"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m215239_auto   #####
def m215239_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.339000 4.009044"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'I': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 1 charge 0.82",
		  "set type 2 charge 0.69",
		  "set type 2 charge 0.69",
		  "set type 3 charge -0.74",
		  "set type 3 charge -0.74"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m215828_auto   #####
def m215828_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.053000 2.609442"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Rh': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Rh': 102.9055}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge -2.33",
		  "set type 3 charge 0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m216013_auto   #####
def m216013_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'H': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 0.41",
		  "set type 3 charge -1.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m216574_auto   #####
def m216574_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.398000 3.982317"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Te': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Te': 127.6}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.59",
		  "set type 2 charge 0.48",
		  "set type 3 charge -0.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m217384_auto   #####
def m217384_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.072000 2.798313",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Hf': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Hf': 178.49, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge 1.8",
		  "set type 3 charge 2.63",
		  "set type 4 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m217529_auto   #####
def m217529_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 1.63",
		  "set type 3 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m217943_auto   #####
def m217943_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.053000 2.609442"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Rh': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Rh': 102.9055}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.48",
		  "set type 2 charge -0.14",
		  "set type 3 charge 0.09"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m217969_auto   #####
def m217969_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.053000 2.609442",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Rh': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Rh': 102.9055, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.94",
		  "set type 1 charge 0.94",
		  "set type 2 charge 1.34",
		  "set type 2 charge 1.34",
		  "set type 3 charge -1.14",
		  "set type 3 charge -1.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m218727_auto   #####
def m218727_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 1 charge 0.71",
		  "set type 2 charge 0.57",
		  "set type 2 charge 0.57",
		  "set type 3 charge -0.64",
		  "set type 3 charge -0.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m222768_auto   #####
def m222768_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.081000 2.824149",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ta': 1, 'Ge': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ta': 180.94788, 'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.21",
		  "set type 2 charge 1.73",
		  "set type 3 charge -0.97",
		  "set type 4 charge 0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m223673_auto   #####
def m223673_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.039000 2.933729",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Au': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Au': 196.966569, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.47",
		  "set type 2 charge 0.15",
		  "set type 3 charge -0.51"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m223791_auto   #####
def m223791_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.67",
		  "set type 3 charge 1.69",
		  "set type 4 charge -1.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m225115_auto   #####
def m225115_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.124000 2.461553",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Zn': 3, 'O': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Zn': 65.38, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.21",
		  "set type 2 charge 1.16",
		  "set type 3 charge 1.51",
		  "set type 4 charge -1.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m225460_auto   #####
def m225460_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 2.39",
		  "set type 3 charge 1.75",
		  "set type 4 charge -1.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m225576_auto   #####
def m225576_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.04",
		  "set type 2 charge 1.45",
		  "set type 3 charge 1.81",
		  "set type 4 charge -1.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m226300_auto   #####
def m226300_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.639733",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ru': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 0.85",
		  "set type 3 charge -0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m226301_auto   #####
def m226301_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.014000 2.558661",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Co': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Co': 58.933195, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 0.42",
		  "set type 3 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m226338_auto   #####
def m226338_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'In': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 1 charge 0.79",
		  "set type 2 charge -2.62",
		  "set type 2 charge -2.62",
		  "set type 3 charge 1.03",
		  "set type 3 charge 1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m226351_auto   #####
def m226351_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'In': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.72",
		  "set type 2 charge -0.24",
		  "set type 3 charge -0.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m226356_auto   #####
def m226356_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 1 charge 0.84",
		  "set type 2 charge -0.09",
		  "set type 2 charge -0.09",
		  "set type 3 charge -1.58",
		  "set type 3 charge -1.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m226377_auto   #####
def m226377_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Si': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 2.06",
		  "set type 3 charge 1.77",
		  "set type 4 charge -1.18"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m226453_auto   #####
def m226453_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.081000 2.824149",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ta': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.04",
		  "set type 2 charge 1.91",
		  "set type 3 charge 2.74",
		  "set type 4 charge -1.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m226476_auto   #####
def m226476_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 1.18",
		  "set type 3 charge 2.23",
		  "set type 4 charge -1.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m226665_auto   #####
def m226665_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.0",
		  "set type 2 charge 1.84",
		  "set type 3 charge -1.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m229427_auto   #####
def m229427_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'V': 3, 'S': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'V': 50.9415, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64",
		  "set type 2 charge 0.47",
		  "set type 3 charge 0.49",
		  "set type 4 charge -0.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m230330_auto   #####
def m230330_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.08",
		  "set type 3 charge 2.27",
		  "set type 4 charge -1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m230859_auto   #####
def m230859_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.039000 2.933729",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Au': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Au': 196.966569, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.02",
		  "set type 3 charge -0.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m230961_auto   #####
def m230961_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'Ge': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'Ge': 72.64, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 1 charge 0.99",
		  "set type 2 charge -2.56",
		  "set type 2 charge -2.56",
		  "set type 3 charge 0.59",
		  "set type 3 charge 0.59"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m231077_auto   #####
def m231077_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.036000 2.804549"]
    
    atom_types = {'Li': 1, 'Si': 2, 'Ag': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'Ag': 107.8682}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.48",
		  "set type 2 charge -0.71",
		  "set type 3 charge 0.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m231254_auto   #####
def m231254_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 1 charge 0.85",
		  "set type 2 charge 1.32",
		  "set type 2 charge 1.32",
		  "set type 3 charge -2.17",
		  "set type 3 charge -2.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m231580_auto   #####
def m231580_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'B': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 0.13",
		  "set type 3 charge -1.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m231970_auto   #####
def m231970_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.080000 2.453535",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'H': 2, 'Pt': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'Pt': 195.084, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.32",
		  "set type 3 charge 1.14",
		  "set type 4 charge -0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m232209_auto   #####
def m232209_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'W': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 2.41",
		  "set type 3 charge -1.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m232333_auto   #####
def m232333_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.719023",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Mo': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Mo': 95.96, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 2.33",
		  "set type 3 charge -1.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m232526_auto   #####
def m232526_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.080000 2.453535",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Pt': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'Pt': 195.084, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.5",
		  "set type 2 charge 0.51",
		  "set type 3 charge -0.63"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m233034_auto   #####
def m233034_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'V': 3, 'S': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'V': 50.9415, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.47",
		  "set type 3 charge 0.51",
		  "set type 4 charge -0.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m235821_auto   #####
def m235821_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Be': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 1 charge 0.77",
		  "set type 2 charge 0.72",
		  "set type 2 charge 0.72",
		  "set type 3 charge -0.5",
		  "set type 3 charge -0.5"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m236199_auto   #####
def m236199_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.048000 2.582715",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Bi': 2, 'Pd': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Bi': 208.9804, 'Pd': 106.42, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.63",
		  "set type 2 charge 0.74",
		  "set type 3 charge 0.65",
		  "set type 4 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m236973_auto   #####
def m236973_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Be': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 1 charge 0.81",
		  "set type 2 charge 0.45",
		  "set type 2 charge 0.45",
		  "set type 3 charge -0.42",
		  "set type 3 charge -0.42"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m238664_auto   #####
def m238664_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Bi': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Bi': 208.9804, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 2.07",
		  "set type 3 charge -0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m238717_auto   #####
def m238717_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.036000 2.804549"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Ag': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Ag': 107.8682}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge -2.84",
		  "set type 3 charge 0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m239448_auto   #####
def m239448_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.041000 3.242871",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Lu': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Lu': 174.9668, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.96",
		  "set type 3 charge -1.61"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m239762_auto   #####
def m239762_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 84.58",
		  "set type 2 charge -14.64",
		  "set type 3 charge -34.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m239900_auto   #####
def m239900_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'H': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 0.23",
		  "set type 3 charge -1.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m240628_auto   #####
def m240628_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'H': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.24",
		  "set type 3 charge -0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m241729_auto   #####
def m241729_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Cl': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 1.22",
		  "set type 3 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m242216_auto   #####
def m242216_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 0.11",
		  "set type 3 charge -0.2"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m242229_auto   #####
def m242229_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 1.52",
		  "set type 3 charge 1.23",
		  "set type 4 charge -1.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m243428_auto   #####
def m243428_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Be': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 1 charge 0.69",
		  "set type 2 charge 1.32",
		  "set type 2 charge 1.32",
		  "set type 3 charge -0.67",
		  "set type 3 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m243718_auto   #####
def m243718_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.066000 2.631715",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Re': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Re': 186.207, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 1.9",
		  "set type 3 charge -1.48"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m243840_auto   #####
def m243840_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.23",
		  "set type 2 charge 1.9",
		  "set type 3 charge -1.57"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m243970_auto   #####
def m243970_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'La': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.61",
		  "set type 2 charge -1.0",
		  "set type 3 charge -0.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m244843_auto   #####
def m244843_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.94",
		  "set type 2 charge 2.3",
		  "set type 3 charge -1.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m245362_auto   #####
def m245362_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'In': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 1.48",
		  "set type 3 charge -1.19"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m245944_auto   #####
def m245944_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 1 charge 1.02",
		  "set type 2 charge 0.89",
		  "set type 2 charge 0.89",
		  "set type 3 charge -1.91",
		  "set type 3 charge -1.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m246048_auto   #####
def m246048_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.009000 3.000547",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'Gd': 2, 'Cl': 3}

    atom_type_masses = {'Li': 6.941, 'Gd': 157.25, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.94",
		  "set type 2 charge 1.85",
		  "set type 3 charge -0.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m246375_auto   #####
def m246375_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 1 charge 0.8",
		  "set type 2 charge 0.18",
		  "set type 2 charge 0.18",
		  "set type 3 charge -1.79",
		  "set type 3 charge -1.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m247092_auto   #####
def m247092_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 0.07",
		  "set type 3 charge -1.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m247509_auto   #####
def m247509_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.36",
		  "set type 2 charge -3.25",
		  "set type 3 charge 2.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m247523_auto   #####
def m247523_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.33",
		  "set type 3 charge -0.27"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m247617_auto   #####
def m247617_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.5",
		  "set type 2 charge -0.08",
		  "set type 3 charge 0.0"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m247641_auto   #####
def m247641_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 1 charge 0.88",
		  "set type 2 charge -0.84",
		  "set type 2 charge -0.84",
		  "set type 3 charge -2.68",
		  "set type 3 charge -2.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m247973_auto   #####
def m247973_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -3.14",
		  "set type 1 charge -3.14",
		  "set type 1 charge 1.52",
		  "set type 1 charge 1.52",
		  "set type 2 charge 0.95",
		  "set type 2 charge 0.95",
		  "set type 3 charge -3.14",
		  "set type 3 charge -3.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m248123_auto   #####
def m248123_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -2.66",
		  "set type 1 charge -2.66",
		  "set type 1 charge 0.73",
		  "set type 1 charge 0.73",
		  "set type 2 charge 0.96",
		  "set type 2 charge 0.96",
		  "set type 3 charge -2.66",
		  "set type 3 charge -2.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m248496_auto   #####
def m248496_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -1.01",
		  "set type 1 charge -1.01",
		  "set type 1 charge 0.21",
		  "set type 1 charge 0.21",
		  "set type 2 charge 0.36",
		  "set type 2 charge 0.36",
		  "set type 3 charge -1.01",
		  "set type 3 charge -1.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m248715_auto   #####
def m248715_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.518000 3.893227"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Bi': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Bi': 208.9804}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.64",
		  "set type 2 charge 1.77",
		  "set type 3 charge -3.41"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m248793_auto   #####
def m248793_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Y': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 2.42",
		  "set type 3 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m249176_auto   #####
def m249176_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'B': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge -0.43",
		  "set type 3 charge -0.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m249599_auto   #####
def m249599_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'B': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge -0.34",
		  "set type 3 charge -0.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m249704_auto   #####
def m249704_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'B': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 1 charge 0.83",
		  "set type 2 charge 2.18",
		  "set type 2 charge 2.18",
		  "set type 3 charge -0.78",
		  "set type 3 charge -0.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m250079_auto   #####
def m250079_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.09",
		  "set type 2 charge 1.55",
		  "set type 3 charge -1.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m250977_auto   #####
def m250977_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.039000 2.933729"]
    
    atom_types = {'Li': 1, 'Bi': 2, 'Au': 3}

    atom_type_masses = {'Li': 6.941, 'Bi': 208.9804, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.48",
		  "set type 2 charge -0.93",
		  "set type 3 charge -0.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m251242_auto   #####
def m251242_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.08",
		  "set type 1 charge 0.08",
		  "set type 2 charge -0.21",
		  "set type 2 charge -0.21",
		  "set type 3 charge 0.12",
		  "set type 3 charge 0.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m251909_auto   #####
def m251909_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Ge': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.42",
		  "set type 2 charge 0.75",
		  "set type 3 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m252780_auto   #####
def m252780_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.26",
		  "set type 2 charge 3.0",
		  "set type 3 charge -1.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m253001_auto   #####
def m253001_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'H': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.31",
		  "set type 2 charge -0.07",
		  "set type 3 charge -0.48"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m253294_auto   #####
def m253294_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.180000 3.637539"]
    
    atom_types = {'Li': 1, 'Be': 2, 'B': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'B': 10.811}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.07",
		  "set type 2 charge -0.16",
		  "set type 2 charge 0.22",
		  "set type 3 charge -0.16"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m253724_auto   #####
def m253724_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 135.91",
		  "set type 2 charge -33.35",
		  "set type 3 charge -51.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m254044_auto   #####
def m254044_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 1 charge 0.87",
		  "set type 2 charge 1.19",
		  "set type 2 charge 1.19",
		  "set type 3 charge -2.06",
		  "set type 3 charge -2.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m254109_auto   #####
def m254109_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Si': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'Si': 28.0855, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.17",
		  "set type 2 charge -0.22",
		  "set type 3 charge 0.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m255668_auto   #####
def m255668_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.16",
		  "set type 2 charge -0.23",
		  "set type 3 charge 0.37"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m255758_auto   #####
def m255758_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'V': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.2",
		  "set type 2 charge 2.89",
		  "set type 3 charge -2.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m257291_auto   #####
def m257291_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.039000 2.933729",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'Au': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Au': 196.966569, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 1.49",
		  "set type 3 charge 0.79",
		  "set type 4 charge -0.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m257340_auto   #####
def m257340_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.080000 2.453535",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Pt': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Pt': 195.084, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.52",
		  "set type 2 charge 0.56",
		  "set type 3 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m257522_auto   #####
def m257522_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.4",
		  "set type 1 charge 0.4",
		  "set type 2 charge 0.59",
		  "set type 2 charge 0.59",
		  "set type 3 charge -1.4",
		  "set type 3 charge -1.4"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m257626_auto   #####
def m257626_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.385000 2.409881",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Hg': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Hg': 200.59, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.72",
		  "set type 1 charge 0.72",
		  "set type 2 charge 0.59",
		  "set type 2 charge 0.59",
		  "set type 3 charge -2.04",
		  "set type 3 charge -2.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m258015_auto   #####
def m258015_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.04",
		  "set type 2 charge 1.39",
		  "set type 3 charge -3.48"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m258310_auto   #####
def m258310_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Si': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'Si': 28.0855, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.22",
		  "set type 2 charge 0.04",
		  "set type 3 charge 0.31"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m259398_auto   #####
def m259398_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 1 charge 0.82",
		  "set type 2 charge 0.38",
		  "set type 2 charge 0.38",
		  "set type 3 charge -2.02",
		  "set type 3 charge -2.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m260089_auto   #####
def m260089_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.048000 2.582715",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Pd': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Pd': 106.42, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.5",
		  "set type 2 charge 0.43",
		  "set type 3 charge -0.57"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m260538_auto   #####
def m260538_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.005000 3.113691",
	       "pair_coeff 4 4 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'In': 2, 'Cu': 3, 'Se': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Cu': 63.546, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.58",
		  "set type 2 charge 0.5",
		  "set type 3 charge 0.37",
		  "set type 4 charge -0.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m260599_auto   #####
def m260599_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'K': 1, 'Li': 2, 'S': 3}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.04",
		  "set type 1 charge 0.04",
		  "set type 2 charge 0.59",
		  "set type 2 charge 0.59",
		  "set type 3 charge -0.63",
		  "set type 3 charge -0.63"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m261083_auto   #####
def m261083_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.053000 2.609442",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Rh': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Rh': 102.9055, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.13",
		  "set type 2 charge 1.74",
		  "set type 3 charge -1.43"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m261781_auto   #####
def m261781_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.663000 3.828192"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Pb': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Pb': 207.2}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 1 charge 0.79",
		  "set type 2 charge 0.11",
		  "set type 2 charge 0.11",
		  "set type 3 charge -1.68",
		  "set type 3 charge -1.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m261884_auto   #####
def m261884_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.94",
		  "set type 2 charge 1.41",
		  "set type 3 charge -1.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m262088_auto   #####
def m262088_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Al': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 1.05",
		  "set type 3 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m262134_auto   #####
def m262134_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.339000 4.009044",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'I': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'I': 126.90447, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.11",
		  "set type 1 charge -0.11",
		  "set type 2 charge -3.15",
		  "set type 2 charge -3.15",
		  "set type 3 charge 1.96",
		  "set type 3 charge 1.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m262169_auto   #####
def m262169_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 2.16",
		  "set type 3 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m262298_auto   #####
def m262298_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 0.51",
		  "set type 3 charge -2.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m263254_auto   #####
def m263254_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.38",
		  "set type 3 charge 1.29",
		  "set type 4 charge -1.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m263287_auto   #####
def m263287_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 2.35",
		  "set type 3 charge -1.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m264040_auto   #####
def m264040_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 0.44",
		  "set type 3 charge -1.94"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m264049_auto   #####
def m264049_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 1.43",
		  "set type 3 charge -1.19"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m264253_auto   #####
def m264253_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 2.07",
		  "set type 3 charge -1.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m264618_auto   #####
def m264618_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.010000 3.212581",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Pr': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Pr': 140.90765, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.15",
		  "set type 1 charge -0.15",
		  "set type 2 charge 1.13",
		  "set type 2 charge 1.13",
		  "set type 3 charge -0.99",
		  "set type 3 charge -0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m264656_auto   #####
def m264656_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.505000 4.008153"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Al': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Al': 26.9815386}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.58",
		  "set type 2 charge 1.27",
		  "set type 3 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m265125_auto   #####
def m265125_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 0.17",
		  "set type 3 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m265594_auto   #####
def m265594_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 0.33",
		  "set type 3 charge -1.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m265653_auto   #####
def m265653_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Be': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.57",
		  "set type 1 charge 1.57",
		  "set type 2 charge 1.51",
		  "set type 2 charge 1.51",
		  "set type 3 charge -3.08",
		  "set type 3 charge -3.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m265714_auto   #####
def m265714_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.46",
		  "set type 2 charge 1.85",
		  "set type 3 charge -3.31"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m265741_auto   #####
def m265741_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.518000 3.893227"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Bi': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Bi': 208.9804}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.82",
		  "set type 2 charge 1.62",
		  "set type 3 charge -3.43"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m265840_auto   #####
def m265840_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.518000 3.893227"]
    
    atom_types = {'Li': 1, 'Be': 2, 'Bi': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'Bi': 208.9804}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.49",
		  "set type 2 charge 1.4",
		  "set type 3 charge -2.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m265914_auto   #####
def m265914_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.51",
		  "set type 2 charge 3.12",
		  "set type 3 charge -5.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m265958_auto   #####
def m265958_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.61",
		  "set type 3 charge -1.27"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m266208_auto   #####
def m266208_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Y': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.16",
		  "set type 2 charge 2.49",
		  "set type 3 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m266331_auto   #####
def m266331_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Be': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.6",
		  "set type 1 charge 1.6",
		  "set type 2 charge 1.73",
		  "set type 2 charge 1.73",
		  "set type 3 charge -3.34",
		  "set type 3 charge -3.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m266348_auto   #####
def m266348_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Be': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.66",
		  "set type 1 charge 1.66",
		  "set type 2 charge 1.81",
		  "set type 2 charge 1.81",
		  "set type 3 charge -3.48",
		  "set type 3 charge -3.48"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m266392_auto   #####
def m266392_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'La': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 2.25",
		  "set type 3 charge -2.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m266443_auto   #####
def m266443_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.180000 3.637539"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'B': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'B': 10.811}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.33",
		  "set type 2 charge 1.24",
		  "set type 3 charge -2.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m266526_auto   #####
def m266526_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 1.09",
		  "set type 3 charge -1.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m266638_auto   #####
def m266638_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 1.51",
		  "set type 3 charge -1.31"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m267957_auto   #####
def m267957_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 3.71",
		  "set type 3 charge -1.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m268384_auto   #####
def m268384_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.039000 2.933729",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Au': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Au': 196.966569, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 0.8",
		  "set type 3 charge -0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m268466_auto   #####
def m268466_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.75",
		  "set type 3 charge -1.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m268549_auto   #####
def m268549_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.12",
		  "set type 2 charge 0.47",
		  "set type 3 charge -2.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m268619_auto   #####
def m268619_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 1.44",
		  "set type 3 charge -1.19"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m268724_auto   #####
def m268724_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'H': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'H': 1.00794, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 3.9",
		  "set type 2 charge 2.36",
		  "set type 3 charge -2.32",
		  "set type 4 charge -2.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m268897_auto   #####
def m268897_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 1 charge 0.88",
		  "set type 2 charge 0.81",
		  "set type 2 charge 0.81",
		  "set type 3 charge -1.7",
		  "set type 3 charge -1.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m269078_auto   #####
def m269078_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.036000 2.804549",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ag': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ag': 107.8682, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 0.86",
		  "set type 3 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m269705_auto   #####
def m269705_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.036000 2.804549"]
    
    atom_types = {'Li': 1, 'In': 2, 'Ag': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Ag': 107.8682}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.46",
		  "set type 2 charge -1.23",
		  "set type 3 charge 0.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m269934_auto   #####
def m269934_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 0.31",
		  "set type 3 charge -1.45"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m270279_auto   #####
def m270279_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.09",
		  "set type 2 charge 0.45",
		  "set type 3 charge -1.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m270355_auto   #####
def m270355_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 1 charge 0.85",
		  "set type 2 charge 0.1",
		  "set type 2 charge 0.1",
		  "set type 3 charge -1.8",
		  "set type 3 charge -1.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m270432_auto   #####
def m270432_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 0.93",
		  "set type 3 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m270491_auto   #####
def m270491_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.449000 3.937772",
	       "pair_coeff 4 4 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Sb': 3, 'Pd': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Sb': 121.76, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 0.7",
		  "set type 3 charge -2.6",
		  "set type 4 charge 1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m270815_auto   #####
def m270815_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.567000 3.912827",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Sn': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Sn': 118.71, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.94",
		  "set type 3 charge -0.87",
		  "set type 3 charge 1.01",
		  "set type 4 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m270896_auto   #####
def m270896_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.988965",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Yb': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Yb': 173.054, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.06",
		  "set type 2 charge 2.31",
		  "set type 3 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m271183_auto   #####
def m271183_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'P': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.94",
		  "set type 3 charge -0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m272244_auto   #####
def m272244_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'F': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.1",
		  "set type 1 charge 1.1",
		  "set type 2 charge 0.88",
		  "set type 2 charge 0.88",
		  "set type 3 charge -0.95",
		  "set type 3 charge -0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m272681_auto   #####
def m272681_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.83",
		  "set type 3 charge -1.0"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m272812_auto   #####
def m272812_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Cl': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 1 charge 0.9",
		  "set type 2 charge 0.8",
		  "set type 2 charge 0.8",
		  "set type 3 charge -0.86",
		  "set type 3 charge -0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m273269_auto   #####
def m273269_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 1 charge 0.81",
		  "set type 2 charge 1.46",
		  "set type 2 charge 1.46",
		  "set type 3 charge -0.76",
		  "set type 3 charge -0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m273317_auto   #####
def m273317_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.680000 3.872737",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Tl': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Tl': 204.3833, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.03",
		  "set type 3 charge -0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m273318_auto   #####
def m273318_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.91",
		  "set type 1 charge -0.91",
		  "set type 1 charge 0.08",
		  "set type 1 charge 0.08",
		  "set type 2 charge 0.42",
		  "set type 2 charge 0.42",
		  "set type 3 charge -0.91",
		  "set type 3 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m273505_auto   #####
def m273505_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 1.42",
		  "set type 3 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m273689_auto   #####
def m273689_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.339000 4.009044"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'I': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 1 charge 0.81",
		  "set type 2 charge 0.73",
		  "set type 2 charge 0.73",
		  "set type 3 charge -0.77",
		  "set type 3 charge -0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m274123_auto   #####
def m274123_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.339000 4.009044"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'I': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 1 charge 0.79",
		  "set type 2 charge 0.76",
		  "set type 2 charge 0.76",
		  "set type 3 charge -0.77",
		  "set type 3 charge -0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m274270_auto   #####
def m274270_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.036000 2.804549",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Ag': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Ag': 107.8682, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.23",
		  "set type 2 charge 0.07",
		  "set type 3 charge -0.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m274337_auto   #####
def m274337_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.25",
		  "set type 2 charge 3.12",
		  "set type 3 charge -1.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m274764_auto   #####
def m274764_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'In': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.68",
		  "set type 2 charge 1.17",
		  "set type 3 charge 1.22",
		  "set type 4 charge -0.69"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m274773_auto   #####
def m274773_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.339000 4.009044"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'I': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 1 charge 0.86",
		  "set type 2 charge 0.8",
		  "set type 2 charge 0.8",
		  "set type 3 charge -0.85",
		  "set type 3 charge -0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m275237_auto   #####
def m275237_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Cl': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 1 charge 0.88",
		  "set type 2 charge 0.83",
		  "set type 2 charge 0.83",
		  "set type 3 charge -0.87",
		  "set type 3 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m275240_auto   #####
def m275240_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 1.55",
		  "set type 3 charge 0.78",
		  "set type 4 charge -0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m275904_auto   #####
def m275904_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'F': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 1 charge 1.05",
		  "set type 2 charge 1.01",
		  "set type 2 charge 1.01",
		  "set type 3 charge -1.02",
		  "set type 3 charge -1.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m276122_auto   #####
def m276122_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'F': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 1 charge 0.8",
		  "set type 2 charge 0.79",
		  "set type 2 charge 0.79",
		  "set type 3 charge -0.8",
		  "set type 3 charge -0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m276885_auto   #####
def m276885_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = [""]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m276984_auto   #####
def m276984_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 1 charge 0.91",
		  "set type 2 charge 0.76",
		  "set type 2 charge 0.76",
		  "set type 3 charge -0.56",
		  "set type 3 charge -0.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m277013_auto   #####
def m277013_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 0.29",
		  "set type 3 charge -2.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m277346_auto   #####
def m277346_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -1.47",
		  "set type 1 charge -1.47",
		  "set type 1 charge 0.48",
		  "set type 1 charge 0.48",
		  "set type 2 charge 0.51",
		  "set type 2 charge 0.51",
		  "set type 3 charge -1.47",
		  "set type 3 charge -1.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m277525_auto   #####
def m277525_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.26",
		  "set type 2 charge 2.33",
		  "set type 3 charge 0.6",
		  "set type 4 charge -3.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m277639_auto   #####
def m277639_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.13",
		  "set type 2 charge -0.03",
		  "set type 3 charge 0.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m277693_auto   #####
def m277693_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.41",
		  "set type 1 charge -0.41",
		  "set type 1 charge 0.2",
		  "set type 1 charge 0.2",
		  "set type 2 charge 0.0",
		  "set type 2 charge 0.0",
		  "set type 3 charge -0.41",
		  "set type 3 charge -0.41"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m277892_auto   #####
def m277892_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'B': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.63",
		  "set type 2 charge -1.92",
		  "set type 3 charge 1.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m277945_auto   #####
def m277945_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.53",
		  "set type 2 charge 0.14",
		  "set type 3 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m278197_auto   #####
def m278197_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -1.07",
		  "set type 1 charge -1.07",
		  "set type 1 charge 0.34",
		  "set type 1 charge 0.34",
		  "set type 2 charge 0.44",
		  "set type 2 charge 0.44",
		  "set type 3 charge -1.07",
		  "set type 3 charge -1.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m278685_auto   #####
def m278685_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 2.14",
		  "set type 3 charge -1.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m280113_auto   #####
def m280113_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.180000 3.637539"]
    
    atom_types = {'Li': 1, 'Si': 2, 'B': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'B': 10.811}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.55",
		  "set type 2 charge -0.26",
		  "set type 3 charge -0.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m280203_auto   #####
def m280203_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.06",
		  "set type 2 charge 1.9",
		  "set type 3 charge 0.47",
		  "set type 4 charge -2.48"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m280233_auto   #####
def m280233_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.402000 3.826410",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Si': 1, 'B': 2, 'Li': 3}

    atom_type_masses = {'Si': 28.0855, 'B': 10.811, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.02",
		  "set type 2 charge -0.13",
		  "set type 3 charge 0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m282823_auto   #####
def m282823_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Al': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.39",
		  "set type 2 charge -0.05",
		  "set type 3 charge -0.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m282929_auto   #####
def m282929_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ge': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ge': 72.64, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 2 charge 0.97",
		  "set type 3 charge 1.25",
		  "set type 4 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m283428_auto   #####
def m283428_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.22",
		  "set type 2 charge 0.43",
		  "set type 3 charge -2.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m284020_auto   #####
def m284020_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.719023",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mo': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mo': 95.96, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.72",
		  "set type 3 charge 1.35",
		  "set type 4 charge -0.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m285715_auto   #####
def m285715_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Al': 3, 'H': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Al': 26.9815386, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 1.44",
		  "set type 3 charge 0.68",
		  "set type 4 charge -0.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m286154_auto   #####
def m286154_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.111000 2.691405",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.073000 2.530152",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Mg': 1, 'H': 2, 'Ir': 3, 'Li': 4}

    atom_type_masses = {'Mg': 24.305, 'H': 1.00794, 'Ir': 192.217, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.42",
		  "set type 2 charge -0.11",
		  "set type 3 charge -0.2",
		  "set type 4 charge 0.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m286597_auto   #####
def m286597_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Al': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Al': 26.9815386, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.58",
		  "set type 2 charge 1.49",
		  "set type 3 charge -1.74",
		  "set type 4 charge 0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m289216_auto   #####
def m289216_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.15",
		  "set type 3 charge -1.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m289466_auto   #####
def m289466_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Y': 2, 'B': 3, 'H': 4}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 1.26",
		  "set type 3 charge -0.45",
		  "set type 4 charge -0.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m289519_auto   #####
def m289519_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.505000 4.008153",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Al': 1, 'Ge': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Al': 26.9815386, 'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.78",
		  "set type 2 charge 1.96",
		  "set type 3 charge -1.19",
		  "set type 4 charge 1.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m290533_auto   #####
def m290533_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.081000 2.824149",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ta': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 2.04",
		  "set type 3 charge 2.6",
		  "set type 4 charge -1.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m292302_auto   #####
def m292302_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge 2.49",
		  "set type 3 charge 1.83",
		  "set type 4 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m292524_auto   #####
def m292524_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.036000 2.804549"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Ag': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Ag': 107.8682}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge -2.49",
		  "set type 3 charge 1.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m292725_auto   #####
def m292725_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.663000 3.828192"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Pb': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Pb': 207.2}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 1 charge 0.8",
		  "set type 2 charge 0.1",
		  "set type 2 charge 0.1",
		  "set type 3 charge -1.7",
		  "set type 3 charge -1.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m293080_auto   #####
def m293080_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Be': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 1.02",
		  "set type 2 charge 1.22",
		  "set type 3 charge 1.02",
		  "set type 4 charge -0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m293215_auto   #####
def m293215_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.056000 2.639733"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Ru': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Ru': 101.07}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.44",
		  "set type 2 charge -0.16",
		  "set type 3 charge 0.19"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m293241_auto   #####
def m293241_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge -0.96",
		  "set type 2 charge 1.12",
		  "set type 3 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m293261_auto   #####
def m293261_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 1.77",
		  "set type 3 charge -3.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m293358_auto   #####
def m293358_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.12",
		  "set type 2 charge 2.2",
		  "set type 3 charge -0.55"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m293552_auto   #####
def m293552_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'As': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'As': 74.9216, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64",
		  "set type 2 charge 0.25",
		  "set type 3 charge -0.45"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m294513_auto   #####
def m294513_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.251000 3.731975",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Br': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Br': 79.904, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 1 charge 0.85",
		  "set type 2 charge -0.72",
		  "set type 2 charge -0.72",
		  "set type 3 charge -1.84",
		  "set type 3 charge -1.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m295290_auto   #####
def m295290_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.039000 2.933729"]
    
    atom_types = {'Li': 1, 'In': 2, 'Au': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.57",
		  "set type 2 charge -1.31",
		  "set type 3 charge 0.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m295488_auto   #####
def m295488_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Na': 1, 'Li': 2, 'S': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.55",
		  "set type 1 charge 0.55",
		  "set type 2 charge 0.54",
		  "set type 2 charge 0.54",
		  "set type 3 charge -1.09",
		  "set type 3 charge -1.09"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m297057_auto   #####
def m297057_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Cl': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 1 charge 0.76",
		  "set type 2 charge 0.57",
		  "set type 2 charge 0.57",
		  "set type 3 charge -0.66",
		  "set type 3 charge -0.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m297455_auto   #####
def m297455_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 0.33",
		  "set type 3 charge -1.42"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m297484_auto   #####
def m297484_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.599000 3.976081",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'In': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'In': 114.818, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.43",
		  "set type 3 charge 1.66",
		  "set type 4 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m297573_auto   #####
def m297573_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.12",
		  "set type 2 charge 0.05",
		  "set type 3 charge -0.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m297590_auto   #####
def m297590_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 2 charge 1.29",
		  "set type 3 charge 1.28",
		  "set type 4 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m297702_auto   #####
def m297702_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Ge': 3, 'Se': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Ge': 72.64, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 0.86",
		  "set type 3 charge 0.83",
		  "set type 4 charge -0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m297768_auto   #####
def m297768_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.03",
		  "set type 2 charge 1.87",
		  "set type 3 charge 1.86",
		  "set type 4 charge -1.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m297802_auto   #####
def m297802_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Y': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 2.5",
		  "set type 3 charge -1.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m297970_auto   #####
def m297970_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 1.08",
		  "set type 3 charge 0.26",
		  "set type 4 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m298026_auto   #####
def m298026_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Si': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 1.84",
		  "set type 3 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m298882_auto   #####
def m298882_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.072000 2.980056",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'K': 1, 'Li': 2, 'Y': 3, 'F': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Y': 88.90585, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 0.94",
		  "set type 3 charge 2.16",
		  "set type 4 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m299623_auto   #####
def m299623_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.014000 2.558661",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Co': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Co': 58.933195, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 1.27",
		  "set type 3 charge 1.4",
		  "set type 4 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m299919_auto   #####
def m299919_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'N': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'N': 14.0067, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 2.03",
		  "set type 3 charge -1.89",
		  "set type 4 charge -1.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m300066_auto   #####
def m300066_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.274000 3.594776",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'S': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'S': 32.065, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 1.7",
		  "set type 3 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m300714_auto   #####
def m300714_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.59",
		  "set type 3 charge 1.91",
		  "set type 4 charge -1.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m300773_auto   #####
def m300773_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.22",
		  "set type 2 charge 1.74",
		  "set type 3 charge -2.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m300871_auto   #####
def m300871_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'N': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'N': 14.0067, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.08",
		  "set type 2 charge 2.87",
		  "set type 3 charge -2.59",
		  "set type 4 charge -2.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m301212_auto   #####
def m301212_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.080000 2.453535"]
    
    atom_types = {'Li': 1, 'In': 2, 'Pt': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Pt': 195.084}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.24",
		  "set type 2 charge -1.77",
		  "set type 3 charge 0.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m302516_auto   #####
def m302516_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'H': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'H': 1.00794, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.66",
		  "set type 2 charge -0.81",
		  "set type 3 charge 0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m302582_auto   #####
def m302582_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'K': 1, 'Li': 2, 'S': 3}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.56",
		  "set type 1 charge 0.56",
		  "set type 2 charge 0.57",
		  "set type 2 charge 0.57",
		  "set type 3 charge -1.14",
		  "set type 3 charge -1.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m302625_auto   #####
def m302625_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.039000 2.933729",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Au': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Au': 196.966569, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 1.64",
		  "set type 3 charge -0.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m302718_auto   #####
def m302718_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.019000 2.935511",
	       "pair_coeff 4 4 0.339000 4.009044"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Sc': 3, 'I': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Sc': 44.955912, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.61",
		  "set type 2 charge 0.41",
		  "set type 3 charge 0.43",
		  "set type 4 charge -0.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m302924_auto   #####
def m302924_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Be': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 0.66",
		  "set type 3 charge -1.38"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m303105_auto   #####
def m303105_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.524807",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ni': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Ni': 58.6934, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.56",
		  "set type 2 charge -1.33",
		  "set type 2 charge 0.4",
		  "set type 3 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m303457_auto   #####
def m303457_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.050000 2.996983",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'F': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.01",
		  "set type 2 charge -0.82",
		  "set type 3 charge 0.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m303493_auto   #####
def m303493_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Be': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.41",
		  "set type 2 charge 0.54",
		  "set type 3 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m303615_auto   #####
def m303615_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.059000 2.819694",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Nb': 3, 'S': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Nb': 92.90638, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.57",
		  "set type 3 charge 0.9",
		  "set type 4 charge -0.69"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m303681_auto   #####
def m303681_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.12",
		  "set type 2 charge 1.2",
		  "set type 3 charge -2.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m303748_auto   #####
def m303748_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 0.0",
		  "set type 3 charge -1.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m303884_auto   #####
def m303884_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.1",
		  "set type 2 charge 2.63",
		  "set type 3 charge -2.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m303977_auto   #####
def m303977_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.041000 3.242871",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Lu': 3, 'Cl': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Lu': 174.9668, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 0.98",
		  "set type 3 charge 1.43",
		  "set type 4 charge -0.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m304039_auto   #####
def m304039_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.64",
		  "set type 3 charge 1.25",
		  "set type 4 charge -0.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m304141_auto   #####
def m304141_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ge': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.36",
		  "set type 3 charge -1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m304891_auto   #####
def m304891_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 1.11",
		  "set type 3 charge 1.1",
		  "set type 4 charge -0.59"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m305060_auto   #####
def m305060_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.518000 3.893227",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Bi': 3, 'O': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Bi': 208.9804, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.23",
		  "set type 2 charge 1.01",
		  "set type 3 charge 3.04",
		  "set type 4 charge -1.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m305104_auto   #####
def m305104_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.274000 3.594776",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'S': 2, 'O': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'S': 32.065, 'O': 15.9994, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.3",
		  "set type 3 charge -0.68",
		  "set type 4 charge -0.16"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m305681_auto   #####
def m305681_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Mg': 2, 'Si': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Mg': 24.305, 'Si': 28.0855, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.44",
		  "set type 2 charge 0.35",
		  "set type 3 charge -0.79",
		  "set type 4 charge 0.22"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m305693_auto   #####
def m305693_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.73",
		  "set type 3 charge 1.24",
		  "set type 4 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m305865_auto   #####
def m305865_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.309000 3.768502"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Ga': 3, 'As': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Ga': 69.723, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.51",
		  "set type 3 charge 0.69",
		  "set type 4 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m306255_auto   #####
def m306255_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.7",
		  "set type 3 charge 1.8",
		  "set type 4 charge -1.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m306370_auto   #####
def m306370_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.82",
		  "set type 3 charge 1.54",
		  "set type 4 charge -1.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m307089_auto   #####
def m307089_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.68",
		  "set type 2 charge 0.68",
		  "set type 3 charge 0.64",
		  "set type 4 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m307101_auto   #####
def m307101_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 1.82",
		  "set type 3 charge -1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m307264_auto   #####
def m307264_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.49",
		  "set type 2 charge 0.54",
		  "set type 3 charge 0.15",
		  "set type 4 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m307274_auto   #####
def m307274_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Br': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 0.75",
		  "set type 3 charge -0.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m307275_auto   #####
def m307275_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'K': 1, 'Li': 2, 'Ge': 3}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.52",
		  "set type 2 charge 0.52",
		  "set type 3 charge -0.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m308245_auto   #####
def m308245_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.04",
		  "set type 2 charge 2.2",
		  "set type 3 charge -1.42"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m308246_auto   #####
def m308246_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge -1.05",
		  "set type 2 charge 0.94",
		  "set type 3 charge -1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m308422_auto   #####
def m308422_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.085000 2.445517",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Be': 3, 'F': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Be': 9.012182, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 0.94",
		  "set type 3 charge 1.26",
		  "set type 4 charge -0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m308555_auto   #####
def m308555_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'B': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.59",
		  "set type 3 charge -1.43"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m308891_auto   #####
def m308891_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.180000 3.637539",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'B': 1, 'C': 2, 'Li': 3}

    atom_type_masses = {'B': 10.811, 'C': 12.0107, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.05",
		  "set type 2 charge -0.13",
		  "set type 3 charge 0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m309016_auto   #####
def m309016_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge 2.33",
		  "set type 3 charge 1.73",
		  "set type 4 charge -1.27"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m309157_auto   #####
def m309157_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'As': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'As': 74.9216, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.39",
		  "set type 2 charge -2.26",
		  "set type 3 charge 0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m309332_auto   #####
def m309332_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'H': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'H': 1.00794, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 1.9",
		  "set type 3 charge 0.44",
		  "set type 4 charge -1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m310166_auto   #####
def m310166_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'N': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'N': 14.0067, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.07",
		  "set type 2 charge 1.61",
		  "set type 3 charge -0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m310206_auto   #####
def m310206_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.036000 2.804549",
	       "pair_coeff 3 3 0.518000 3.893227"]
    
    atom_types = {'Li': 1, 'Ag': 2, 'Bi': 3}

    atom_type_masses = {'Li': 6.941, 'Ag': 107.8682, 'Bi': 208.9804}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.51",
		  "set type 2 charge 0.57",
		  "set type 3 charge -1.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m310215_auto   #####
def m310215_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.085000 2.445517",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Be': 3, 'F': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Be': 9.012182, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 0.9",
		  "set type 3 charge 1.23",
		  "set type 4 charge -0.74"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m310372_auto   #####
def m310372_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.017000 2.828603",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Ti': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.03",
		  "set type 2 charge 2.69",
		  "set type 3 charge 2.42",
		  "set type 4 charge -1.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m310532_auto   #####
def m310532_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Br': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.7",
		  "set type 3 charge -0.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m310985_auto   #####
def m310985_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'B': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 1.96",
		  "set type 3 charge -1.46"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m311600_auto   #####
def m311600_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.073000 2.530152",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ir': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Ir': 192.217, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.03",
		  "set type 2 charge 1.76",
		  "set type 3 charge -0.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m313125_auto   #####
def m313125_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Te': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Te': 127.6, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.04",
		  "set type 2 charge 2.07",
		  "set type 3 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m313213_auto   #####
def m313213_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.09",
		  "set type 2 charge 0.07",
		  "set type 3 charge -0.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m313335_auto   #####
def m313335_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'B': 2, 'S': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'B': 10.811, 'S': 32.065, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.42",
		  "set type 1 charge 1.63",
		  "set type 2 charge 0.42",
		  "set type 3 charge -0.94",
		  "set type 4 charge 0.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m314393_auto   #####
def m314393_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.505000 4.008153",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Al': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Al': 26.9815386, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.6",
		  "set type 2 charge 1.76",
		  "set type 3 charge -0.95",
		  "set type 4 charge 0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m314468_auto   #####
def m314468_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -1.04",
		  "set type 1 charge 0.6",
		  "set type 2 charge 0.59",
		  "set type 3 charge 0.22",
		  "set type 4 charge -1.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m314630_auto   #####
def m314630_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.07",
		  "set type 2 charge 2.48",
		  "set type 3 charge 1.82",
		  "set type 4 charge -1.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m315368_auto   #####
def m315368_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.798313",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Hf': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Hf': 178.49, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 2.78",
		  "set type 3 charge -1.51"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m315517_auto   #####
def m315517_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.36",
		  "set type 3 charge -0.55"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m315975_auto   #####
def m315975_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Ga': 3, 'O': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Ga': 69.723, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 0.81",
		  "set type 3 charge 1.0",
		  "set type 4 charge -1.26"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m316244_auto   #####
def m316244_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.124000 2.461553",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'Zn': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'Zn': 65.38, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 2.23",
		  "set type 3 charge 1.4",
		  "set type 4 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m316615_auto   #####
def m316615_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.86",
		  "set type 3 charge 1.74",
		  "set type 4 charge -1.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m316847_auto   #####
def m316847_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 0.66",
		  "set type 3 charge -0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m317388_auto   #####
def m317388_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'S': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'S': 32.065, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 0.91",
		  "set type 3 charge 1.61",
		  "set type 4 charge -0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m317523_auto   #####
def m317523_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 1.44",
		  "set type 3 charge 0.86",
		  "set type 4 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m318914_auto   #####
def m318914_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Si': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.34",
		  "set type 3 charge -1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m318948_auto   #####
def m318948_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.124000 2.461553"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Zn': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Zn': 65.38}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.5",
		  "set type 1 charge 0.5",
		  "set type 2 charge -0.32",
		  "set type 2 charge -0.32",
		  "set type 3 charge -0.68",
		  "set type 3 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m319152_auto   #####
def m319152_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.017000 3.137745",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'La': 3, 'Br': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'La': 138.90547, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 0.97",
		  "set type 3 charge 1.52",
		  "set type 4 charge -0.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m319276_auto   #####
def m319276_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ge': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ge': 72.64, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 2.05",
		  "set type 3 charge 1.68",
		  "set type 4 charge -1.16"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m319337_auto   #####
def m319337_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.398000 3.982317"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Te': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Te': 127.6}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.57",
		  "set type 2 charge 0.4",
		  "set type 3 charge -0.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m319449_auto   #####
def m319449_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge -2.69",
		  "set type 3 charge 1.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m319840_auto   #####
def m319840_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.041000 3.242871",
	       "pair_coeff 4 4 0.339000 4.009044"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Lu': 3, 'I': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Lu': 174.9668, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.63",
		  "set type 2 charge 0.45",
		  "set type 3 charge 0.44",
		  "set type 4 charge -0.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m319940_auto   #####
def m319940_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.066000 2.631715",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Re': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Re': 186.207, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.25",
		  "set type 2 charge 1.77",
		  "set type 3 charge -1.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m320555_auto   #####
def m320555_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.398000 3.982317"]
    
    atom_types = {'Li': 1, 'In': 2, 'Te': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Te': 127.6}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.58",
		  "set type 2 charge 0.46",
		  "set type 3 charge -0.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m320665_auto   #####
def m320665_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.663000 3.828192",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Pb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Pb': 207.2, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 1.54",
		  "set type 3 charge -1.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m321038_auto   #####
def m321038_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Nb': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Nb': 92.90638, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.49",
		  "set type 2 charge 1.87",
		  "set type 3 charge -1.18",
		  "set type 4 charge 0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m321172_auto   #####
def m321172_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.251000 3.731975",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Br': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'Br': 79.904, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.29",
		  "set type 2 charge -0.67",
		  "set type 3 charge 0.74"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m321327_auto   #####
def m321327_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.041000 3.242871",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Lu': 3, 'F': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Lu': 174.9668, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 0.88",
		  "set type 3 charge 2.21",
		  "set type 4 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m321363_auto   #####
def m321363_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'B': 2, 'S': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'B': 10.811, 'S': 32.065, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.47",
		  "set type 1 charge 1.21",
		  "set type 2 charge 0.28",
		  "set type 3 charge -0.47",
		  "set type 4 charge 0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m321728_auto   #####
def m321728_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.291000 3.746229",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Se': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Se': 78.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 1.98",
		  "set type 3 charge -1.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m321934_auto   #####
def m321934_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Nb': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Nb': 92.90638, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.01",
		  "set type 2 charge 2.66",
		  "set type 3 charge -1.33",
		  "set type 4 charge 0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m322589_auto   #####
def m322589_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.081000 2.824149",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'Ta': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.06",
		  "set type 2 charge 2.33",
		  "set type 3 charge 2.4",
		  "set type 4 charge -1.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m322984_auto   #####
def m322984_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.1",
		  "set type 2 charge 2.56",
		  "set type 3 charge -1.46"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m323413_auto   #####
def m323413_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.36",
		  "set type 3 charge 1.5",
		  "set type 4 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m323989_auto   #####
def m323989_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.017000 2.828603",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ti': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ti': 47.867, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.78",
		  "set type 2 charge 1.64",
		  "set type 3 charge -0.78",
		  "set type 4 charge 0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m324172_auto   #####
def m324172_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.066000 2.631715",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Re': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Re': 186.207, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.13",
		  "set type 2 charge 3.0",
		  "set type 3 charge -1.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m324591_auto   #####
def m324591_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.017000 3.137745",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'La': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'La': 138.90547, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.43",
		  "set type 2 charge 1.39",
		  "set type 3 charge -0.75",
		  "set type 4 charge 0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m325428_auto   #####
def m325428_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.44",
		  "set type 3 charge 1.07",
		  "set type 4 charge -0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m325910_auto   #####
def m325910_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.227000 3.516377",
	       "pair_coeff 4 4 0.599000 3.976081"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'Cl': 3, 'In': 4}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'Cl': 35.453, 'In': 114.818}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 0.18",
		  "set type 3 charge -0.19",
		  "set type 4 charge 0.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m326125_auto   #####
def m326125_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.379000 3.813047",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ge': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.4",
		  "set type 2 charge -0.79",
		  "set type 3 charge 0.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m326191_auto   #####
def m326191_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Al': 2, 'F': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Al': 26.9815386, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.82",
		  "set type 2 charge 1.38",
		  "set type 3 charge -0.68",
		  "set type 4 charge 0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m326417_auto   #####
def m326417_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.017000 2.828603",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Ti': 3, 'S': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Ti': 47.867, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 0.76",
		  "set type 3 charge 1.03",
		  "set type 4 charge -1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m326972_auto   #####
def m326972_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.072000 2.980056",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Y': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Y': 88.90585, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge -0.82",
		  "set type 3 charge 0.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m327955_auto   #####
def m327955_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.069000 2.783168",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Zr': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Zr': 91.224, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.39",
		  "set type 2 charge 1.92",
		  "set type 3 charge -0.96",
		  "set type 4 charge 0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m328129_auto   #####
def m328129_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Si': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 1.94",
		  "set type 3 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m328157_auto   #####
def m328157_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.072000 2.798313",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Hf': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Hf': 178.49, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.35",
		  "set type 2 charge 1.88",
		  "set type 3 charge -0.94",
		  "set type 4 charge 0.94"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m328253_auto   #####
def m328253_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 2.783168",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Zr': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Zr': 91.224, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 0.81",
		  "set type 3 charge 2.19",
		  "set type 4 charge -1.38"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m328365_auto   #####
def m328365_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.180000 3.637539",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.045000 4.024190",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'B': 1, 'O': 2, 'Cs': 3, 'Li': 4}

    atom_type_masses = {'B': 10.811, 'O': 15.9994, 'Cs': 132.9054519, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.08",
		  "set type 2 charge -0.83",
		  "set type 3 charge 0.91",
		  "set type 4 charge 0.92"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m328388_auto   #####
def m328388_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.056000 2.719023",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Mo': 1, 'As': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Mo': 95.96, 'As': 74.9216, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.76",
		  "set type 2 charge 1.38",
		  "set type 3 charge -0.66",
		  "set type 4 charge 0.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m328781_auto   #####
def m328781_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.069000 2.783168",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Zr': 1, 'As': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Zr': 91.224, 'As': 74.9216, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.25",
		  "set type 2 charge 1.87",
		  "set type 3 charge -0.92",
		  "set type 4 charge 0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m329242_auto   #####
def m329242_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.03",
		  "set type 2 charge 0.91",
		  "set type 3 charge 1.78",
		  "set type 4 charge -1.37"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m329301_auto   #####
def m329301_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.030000 2.657551",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'N': 2, 'Na': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'N': 14.0067, 'Na': 22.98976928, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.09",
		  "set type 2 charge 0.04",
		  "set type 3 charge -0.1",
		  "set type 3 charge 0.04",
		  "set type 4 charge -0.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m329504_auto   #####
def m329504_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge 0.93",
		  "set type 3 charge 1.67",
		  "set type 4 charge -1.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m329908_auto   #####
def m329908_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.663000 3.828192",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Pb': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Pb': 207.2, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge 0.78",
		  "set type 3 charge 1.48",
		  "set type 4 charge -1.19"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m330084_auto   #####
def m330084_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.567000 3.912827",
	       "pair_coeff 2 2 0.053000 2.609442",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sn': 1, 'Rh': 2, 'Li': 3}

    atom_type_masses = {'Sn': 118.71, 'Rh': 102.9055, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.08",
		  "set type 2 charge 0.05",
		  "set type 3 charge 0.26"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m330144_auto   #####
def m330144_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.663000 3.828192",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'B': 2, 'Pb': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'Pb': 207.2, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 0.91",
		  "set type 3 charge 1.16",
		  "set type 4 charge -0.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m331491_auto   #####
def m331491_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.379000 3.813047",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ge': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ge': 72.64, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.64",
		  "set type 2 charge 1.39",
		  "set type 3 charge -0.69",
		  "set type 4 charge 0.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m331624_auto   #####
def m331624_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.567000 3.912827",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sn': 1, 'As': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sn': 118.71, 'As': 74.9216, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.47",
		  "set type 2 charge 1.28",
		  "set type 3 charge -0.64",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m332120_auto   #####
def m332120_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Te': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Te': 127.6, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.91",
		  "set type 3 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m332210_auto   #####
def m332210_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'B': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'B': 10.811, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.3",
		  "set type 1 charge 1.66",
		  "set type 2 charge 1.3",
		  "set type 3 charge -1.07",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m332488_auto   #####
def m332488_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Al': 2, 'F': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Al': 26.9815386, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.82",
		  "set type 2 charge 1.38",
		  "set type 3 charge -0.68",
		  "set type 4 charge 0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m332729_auto   #####
def m332729_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.041000 3.242871",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Lu': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Lu': 174.9668, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.68",
		  "set type 2 charge -0.79",
		  "set type 3 charge 0.45"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m332917_auto   #####
def m332917_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.238000 3.028165",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ca': 1, 'Al': 2, 'F': 3, 'Li': 4}

    atom_type_masses = {'Ca': 40.078, 'Al': 26.9815386, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.63",
		  "set type 2 charge 0.87",
		  "set type 3 charge -0.54",
		  "set type 4 charge 0.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m333072_auto   #####
def m333072_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.072000 2.798313",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Hf': 1, 'As': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Hf': 178.49, 'As': 74.9216, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.22",
		  "set type 2 charge 1.83",
		  "set type 3 charge -0.9",
		  "set type 4 charge 0.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m334948_auto   #####
def m334948_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.567000 3.912827",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sn': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sn': 118.71, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.78",
		  "set type 2 charge 1.4",
		  "set type 3 charge -0.72",
		  "set type 4 charge 0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m335342_auto   #####
def m335342_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.180000 3.637539",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'B': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'B': 10.811, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.31",
		  "set type 2 charge -0.96",
		  "set type 3 charge 0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m335360_auto   #####
def m335360_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 0.92",
		  "set type 3 charge 1.82",
		  "set type 4 charge -1.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m336702_auto   #####
def m336702_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Ge': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Ge': 72.64, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.71",
		  "set type 3 charge -0.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m336780_auto   #####
def m336780_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.030000 2.657551",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'N': 2, 'Na': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'N': 14.0067, 'Na': 22.98976928, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.1",
		  "set type 2 charge 0.03",
		  "set type 3 charge -0.09",
		  "set type 3 charge 0.03",
		  "set type 4 charge -0.11"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m336879_auto   #####
def m336879_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.663000 3.828192",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Pb': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Pb': 207.2, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.75",
		  "set type 3 charge 1.41",
		  "set type 4 charge -1.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m336912_auto   #####
def m336912_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.105000 3.430851",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'H': 2, 'C': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'C': 12.0107, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.42",
		  "set type 2 charge 0.19",
		  "set type 3 charge 0.55",
		  "set type 4 charge -0.27"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m340879_auto   #####
def m340879_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'K': 1, 'Li': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 1.05",
		  "set type 3 charge 0.41",
		  "set type 4 charge -1.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m341614_auto   #####
def m341614_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'W': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.89",
		  "set type 3 charge -0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m342986_auto   #####
def m342986_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.105000 3.430851"]
    
    atom_types = {'Li': 1, 'Te': 2, 'C': 3}

    atom_type_masses = {'Li': 6.941, 'Te': 127.6, 'C': 12.0107}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge -0.72",
		  "set type 3 charge -0.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m343345_auto   #####
def m343345_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.053000 2.609442"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Rh': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Rh': 102.9055}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge -2.59",
		  "set type 3 charge 1.19"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m343832_auto   #####
def m343832_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Nb': 92.90638, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 2.3",
		  "set type 3 charge -1.27"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m345434_auto   #####
def m345434_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'P': 2, 'S': 3, 'Cl': 4}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'S': 32.065, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 0.88",
		  "set type 3 charge -0.81",
		  "set type 4 charge -0.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m346145_auto   #####
def m346145_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Al': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Al': 26.9815386, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 1.23",
		  "set type 3 charge 1.3",
		  "set type 4 charge -1.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m346306_auto   #####
def m346306_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Al': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Al': 26.9815386, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.55",
		  "set type 2 charge 1.47",
		  "set type 3 charge -1.71",
		  "set type 4 charge 0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m346769_auto   #####
def m346769_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Al': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Al': 26.9815386, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.36",
		  "set type 2 charge 1.34",
		  "set type 3 charge -1.7",
		  "set type 4 charge 0.69"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m347668_auto   #####
def m347668_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.74",
		  "set type 2 charge 2.09",
		  "set type 3 charge -3.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m347758_auto   #####
def m347758_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Be': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.09",
		  "set type 1 charge 2.09",
		  "set type 2 charge 2.66",
		  "set type 2 charge 2.66",
		  "set type 3 charge -4.75",
		  "set type 3 charge -4.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m347860_auto   #####
def m347860_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge -0.59",
		  "set type 3 charge -0.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m348044_auto   #####
def m348044_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -1.3",
		  "set type 1 charge -1.3",
		  "set type 1 charge 0.53",
		  "set type 1 charge 0.53",
		  "set type 2 charge 0.34",
		  "set type 2 charge 0.34",
		  "set type 3 charge -1.3",
		  "set type 3 charge -1.3"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m348214_auto   #####
def m348214_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 0.15",
		  "set type 3 charge -1.0"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m348419_auto   #####
def m348419_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 1 charge 0.89",
		  "set type 2 charge 1.14",
		  "set type 2 charge 1.14",
		  "set type 3 charge -0.73",
		  "set type 3 charge -0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m349436_auto   #####
def m349436_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 0.85",
		  "set type 3 charge 1.29",
		  "set type 4 charge -0.92"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m349600_auto   #####
def m349600_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Al': 2, 'H': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.68",
		  "set type 2 charge 0.17",
		  "set type 3 charge -0.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m349967_auto   #####
def m349967_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 1.43",
		  "set type 3 charge -1.25"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m350014_auto   #####
def m350014_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 2.92",
		  "set type 3 charge -1.3"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m350388_auto   #####
def m350388_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.96",
		  "set type 3 charge -1.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m350574_auto   #####
def m350574_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'H': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.22",
		  "set type 3 charge -0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m350660_auto   #####
def m350660_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.28",
		  "set type 2 charge 0.07",
		  "set type 3 charge 0.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m351387_auto   #####
def m351387_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.044000 2.571134"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Al': 3, 'H': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Al': 26.9815386, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 1 charge 0.82",
		  "set type 2 charge 0.86",
		  "set type 2 charge 0.86",
		  "set type 3 charge 0.63",
		  "set type 3 charge 0.63",
		  "set type 4 charge -0.52",
		  "set type 4 charge -0.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m352039_auto   #####
def m352039_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'As': 2, 'H': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'As': 74.9216, 'H': 1.00794, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge -1.41",
		  "set type 3 charge -0.39",
		  "set type 4 charge 0.59"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m352074_auto   #####
def m352074_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'K': 1, 'Li': 2, 'Si': 3}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.52",
		  "set type 2 charge 0.55",
		  "set type 3 charge -0.53"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m353318_auto   #####
def m353318_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Al': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Al': 26.9815386, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 1.26",
		  "set type 3 charge 1.42",
		  "set type 4 charge -1.61"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m353357_auto   #####
def m353357_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'P': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.62",
		  "set type 2 charge 0.61",
		  "set type 3 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m353367_auto   #####
def m353367_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.238000 3.028165",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ca': 1, 'Al': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Ca': 40.078, 'Al': 26.9815386, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.53",
		  "set type 2 charge 1.45",
		  "set type 3 charge -1.67",
		  "set type 4 charge 0.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m353416_auto   #####
def m353416_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge -0.86",
		  "set type 2 charge 0.78",
		  "set type 3 charge -0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m354701_auto   #####
def m354701_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Si': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Si': 28.0855, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.36",
		  "set type 3 charge 1.62",
		  "set type 4 charge -1.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m354781_auto   #####
def m354781_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Al': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Al': 26.9815386, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.39",
		  "set type 3 charge 1.66",
		  "set type 4 charge -1.92"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m355159_auto   #####
def m355159_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.58",
		  "set type 3 charge 1.59",
		  "set type 4 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m355328_auto   #####
def m355328_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.111000 2.691405",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.037000 2.779604",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Mg': 1, 'H': 2, 'Os': 3, 'Li': 4}

    atom_type_masses = {'Mg': 24.305, 'H': 1.00794, 'Os': 190.23, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.39",
		  "set type 2 charge -0.27",
		  "set type 3 charge -1.4",
		  "set type 4 charge 0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m355348_auto   #####
def m355348_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.111000 2.691405",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.056000 2.639733",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Mg': 1, 'H': 2, 'Ru': 3, 'Li': 4}

    atom_type_masses = {'Mg': 24.305, 'H': 1.00794, 'Ru': 101.07, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.41",
		  "set type 2 charge -0.32",
		  "set type 3 charge -1.16",
		  "set type 4 charge 0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m355421_auto   #####
def m355421_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.111000 2.691405",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Mg': 1, 'V': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Mg': 24.305, 'V': 50.9415, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.59",
		  "set type 2 charge 1.76",
		  "set type 3 charge -1.05",
		  "set type 4 charge 0.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m355618_auto   #####
def m355618_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.124000 2.461553",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Zn': 1, 'As': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Zn': 65.38, 'As': 74.9216, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.46",
		  "set type 2 charge 1.91",
		  "set type 3 charge -1.12",
		  "set type 4 charge 1.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m355675_auto   #####
def m355675_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.49",
		  "set type 3 charge 1.43",
		  "set type 4 charge -1.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m355758_auto   #####
def m355758_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'H': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge -0.36",
		  "set type 3 charge -0.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m355886_auto   #####
def m355886_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Be': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.44",
		  "set type 3 charge -0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m355969_auto   #####
def m355969_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.518000 3.893227",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Bi': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'Bi': 208.9804, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.33",
		  "set type 2 charge -1.12",
		  "set type 3 charge 1.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m356031_auto   #####
def m356031_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.04",
		  "set type 1 charge -0.04",
		  "set type 2 charge 0.27",
		  "set type 2 charge 0.27",
		  "set type 3 charge -0.09",
		  "set type 3 charge -0.09"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m356209_auto   #####
def m356209_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.019000 2.935511",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'K': 1, 'Li': 2, 'Sc': 3, 'Cl': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Sc': 44.955912, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 2 charge 1.03",
		  "set type 3 charge 1.42",
		  "set type 4 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m356323_auto   #####
def m356323_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.505000 4.008153",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Al': 1, 'Ge': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Al': 26.9815386, 'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.46",
		  "set type 2 charge 1.32",
		  "set type 3 charge -0.81",
		  "set type 4 charge 0.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m356563_auto   #####
def m356563_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Ga': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Ga': 69.723, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 0.89",
		  "set type 3 charge 1.3",
		  "set type 4 charge -1.46"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m356639_auto   #####
def m356639_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.019000 2.935511",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sc': 1, 'Ge': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sc': 44.955912, 'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.79",
		  "set type 2 charge 1.63",
		  "set type 3 charge -0.98",
		  "set type 4 charge 0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m356988_auto   #####
def m356988_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.041000 3.242871",
	       "pair_coeff 3 3 0.227000 3.516377",
	       "pair_coeff 4 4 0.680000 3.872737"]
    
    atom_types = {'Li': 1, 'Lu': 2, 'Cl': 3, 'Tl': 4}

    atom_type_masses = {'Li': 6.941, 'Lu': 174.9668, 'Cl': 35.453, 'Tl': 204.3833}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.35",
		  "set type 3 charge -0.54",
		  "set type 4 charge 0.5"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m357325_auto   #####
def m357325_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 1.35",
		  "set type 3 charge 1.56",
		  "set type 4 charge -1.11"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m357554_auto   #####
def m357554_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.059000 2.819694",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Nb': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'Nb': 92.90638, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.3",
		  "set type 2 charge -1.08",
		  "set type 3 charge 0.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m357876_auto   #####
def m357876_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.3",
		  "set type 2 charge -0.43",
		  "set type 3 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m358065_auto   #####
def m358065_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Te': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Te': 127.6, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.63",
		  "set type 3 charge 1.84",
		  "set type 4 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m358118_auto   #####
def m358118_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'In': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 1.72",
		  "set type 3 charge -0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m358260_auto   #####
def m358260_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 1.35",
		  "set type 3 charge 1.57",
		  "set type 4 charge -1.11"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m358480_auto   #####
def m358480_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.180000 3.637539",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'B': 1, 'O': 2, 'F': 3, 'Li': 4}

    atom_type_masses = {'B': 10.811, 'O': 15.9994, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge -0.75",
		  "set type 3 charge -0.46",
		  "set type 4 charge 0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m358641_auto   #####
def m358641_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.415000 3.904809",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ga': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ga': 69.723, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.26",
		  "set type 2 charge 1.44",
		  "set type 3 charge -0.83",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m358706_auto   #####
def m358706_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ta': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Ta': 180.94788, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.54",
		  "set type 2 charge 2.17",
		  "set type 3 charge -1.96",
		  "set type 4 charge 0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m359037_auto   #####
def m359037_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.379000 3.813047",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ge': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.58",
		  "set type 2 charge -0.93",
		  "set type 3 charge 0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m359067_auto   #####
def m359067_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Si': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.36",
		  "set type 2 charge 0.39",
		  "set type 3 charge -0.25"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m359380_auto   #####
def m359380_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.505000 4.008153",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Al': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Al': 26.9815386, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.42",
		  "set type 2 charge 1.57",
		  "set type 3 charge -0.9",
		  "set type 4 charge 0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m360666_auto   #####
def m360666_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.339000 4.009044",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'I': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'I': 126.90447, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.19",
		  "set type 3 charge -0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m360840_auto   #####
def m360840_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.17",
		  "set type 3 charge 1.35",
		  "set type 4 charge -0.69"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m361072_auto   #####
def m361072_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.19",
		  "set type 1 charge 0.19",
		  "set type 2 charge -1.51",
		  "set type 2 charge -1.51",
		  "set type 3 charge 0.56",
		  "set type 3 charge 0.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m361448_auto   #####
def m361448_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Ga': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Ga': 69.723, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 0.86",
		  "set type 3 charge 1.17",
		  "set type 4 charge -1.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m361471_auto   #####
def m361471_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.85",
		  "set type 3 charge 0.96",
		  "set type 4 charge -0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m361624_auto   #####
def m361624_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.124000 2.461553",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Zn': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Zn': 65.38, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.47",
		  "set type 2 charge 2.09",
		  "set type 3 charge -1.16",
		  "set type 4 charge 1.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m361775_auto   #####
def m361775_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'W': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.1",
		  "set type 2 charge 2.48",
		  "set type 3 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m362525_auto   #####
def m362525_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.056000 2.639733",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.030000 2.657551",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ru': 1, 'O': 2, 'Na': 3, 'Li': 4}

    atom_type_masses = {'Ru': 101.07, 'O': 15.9994, 'Na': 22.98976928, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.44",
		  "set type 2 charge -0.95",
		  "set type 3 charge 0.83",
		  "set type 4 charge 0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m362603_auto   #####
def m362603_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.238000 3.028165",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ca': 1, 'Si': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Ca': 40.078, 'Si': 28.0855, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.23",
		  "set type 2 charge 1.67",
		  "set type 3 charge -1.39",
		  "set type 4 charge 0.71"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m362635_auto   #####
def m362635_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Nb': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Nb': 92.90638, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.52",
		  "set type 2 charge -1.93",
		  "set type 2 charge 2.12",
		  "set type 3 charge -1.93",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m362716_auto   #####
def m362716_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Si': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Si': 28.0855, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.27",
		  "set type 2 charge 1.14",
		  "set type 3 charge -1.07",
		  "set type 4 charge 0.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m363055_auto   #####
def m363055_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Ta': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Ta': 180.94788, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.81",
		  "set type 2 charge 2.49",
		  "set type 3 charge -1.31",
		  "set type 4 charge 1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m363057_auto   #####
def m363057_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 1.72",
		  "set type 3 charge -0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m363058_auto   #####
def m363058_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 0.9",
		  "set type 3 charge 1.24",
		  "set type 4 charge -1.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m363348_auto   #####
def m363348_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.505000 4.008153",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Al': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Al': 26.9815386, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.66",
		  "set type 2 charge 1.76",
		  "set type 3 charge -1.1",
		  "set type 4 charge 0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m363973_auto   #####
def m363973_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'S': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'S': 32.065, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.03",
		  "set type 2 charge 0.89",
		  "set type 3 charge 1.78",
		  "set type 4 charge -0.92"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m364106_auto   #####
def m364106_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.056000 2.719023",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Mo': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'Mo': 95.96, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.21",
		  "set type 2 charge -0.17",
		  "set type 3 charge 0.09"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m364170_auto   #####
def m364170_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.599000 3.976081",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'In': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'In': 114.818, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.88",
		  "set type 2 charge 1.78",
		  "set type 3 charge -1.0",
		  "set type 4 charge 0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m364427_auto   #####
def m364427_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.34",
		  "set type 3 charge 1.45",
		  "set type 4 charge -1.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m364971_auto   #####
def m364971_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Al': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.96",
		  "set type 3 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m365076_auto   #####
def m365076_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.339000 4.009044",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'I': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'I': 126.90447, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 1.21",
		  "set type 3 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m365154_auto   #####
def m365154_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.059000 2.819694",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Nb': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Nb': 92.90638, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.78",
		  "set type 2 charge 2.32",
		  "set type 3 charge -1.26",
		  "set type 4 charge 1.0"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m365339_auto   #####
def m365339_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.415000 3.904809",
	       "pair_coeff 2 2 0.291000 3.746229",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ga': 1, 'Se': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ga': 69.723, 'Se': 78.96, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.31",
		  "set type 2 charge 0.42",
		  "set type 3 charge -0.48",
		  "set type 4 charge 0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m365360_auto   #####
def m365360_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Si': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'Si': 28.0855, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.47",
		  "set type 2 charge -0.49",
		  "set type 3 charge 0.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m366067_auto   #####
def m366067_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.86",
		  "set type 3 charge -0.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m367297_auto   #####
def m367297_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.291000 3.746229",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Se': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Se': 78.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 1.82",
		  "set type 3 charge -0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m367494_auto   #####
def m367494_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Si': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'Si': 28.0855, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.31",
		  "set type 2 charge -0.33",
		  "set type 3 charge 0.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m369118_auto   #####
def m369118_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.111000 2.691405",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Mg': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Mg': 24.305, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.78",
		  "set type 2 charge 1.53",
		  "set type 3 charge -1.04",
		  "set type 4 charge 0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m369349_auto   #####
def m369349_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.067000 2.734168",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Te': 2, 'W': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Te': 127.6, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 0.69",
		  "set type 3 charge 2.01",
		  "set type 4 charge -0.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m370103_auto   #####
def m370103_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Cl': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.41",
		  "set type 3 charge -0.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m371048_auto   #####
def m371048_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.059000 2.819694",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Nb': 1, 'Bi': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Nb': 92.90638, 'Bi': 208.9804, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.93",
		  "set type 2 charge 1.12",
		  "set type 3 charge -0.79",
		  "set type 4 charge 0.74"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m371112_auto   #####
def m371112_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.65",
		  "set type 2 charge 1.11",
		  "set type 3 charge -1.09",
		  "set type 4 charge 0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m371177_auto   #####
def m371177_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Al': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.1",
		  "set type 2 charge 1.77",
		  "set type 3 charge -2.53"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m371441_auto   #####
def m371441_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.081000 2.824149",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ta': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'Ta': 180.94788, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.72",
		  "set type 2 charge -1.15",
		  "set type 3 charge 1.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m371483_auto   #####
def m371483_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.719023",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mo': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.08",
		  "set type 2 charge 2.37",
		  "set type 3 charge -1.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m372530_auto   #####
def m372530_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.238000 3.028165",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ca': 1, 'Si': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Ca': 40.078, 'Si': 28.0855, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.41",
		  "set type 2 charge 1.47",
		  "set type 3 charge -1.58",
		  "set type 4 charge 0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m372672_auto   #####
def m372672_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.059000 2.819694",
	       "pair_coeff 2 2 0.227000 3.516377",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Nb': 1, 'Cl': 2, 'Li': 3}

    atom_type_masses = {'Nb': 92.90638, 'Cl': 35.453, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.21",
		  "set type 2 charge -0.15",
		  "set type 3 charge 0.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m372959_auto   #####
def m372959_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.599000 3.976081",
	       "pair_coeff 2 2 0.056000 2.719023",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'In': 1, 'Mo': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'In': 114.818, 'Mo': 95.96, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.12",
		  "set type 2 charge 2.06",
		  "set type 3 charge -0.78",
		  "set type 4 charge 0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m374041_auto   #####
def m374041_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.081000 2.824149",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ta': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'Ta': 180.94788, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.48",
		  "set type 2 charge -1.36",
		  "set type 3 charge 0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m375161_auto   #####
def m375161_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.599000 3.976081",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'In': 1, 'B': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'In': 114.818, 'B': 10.811, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.48",
		  "set type 2 charge 1.11",
		  "set type 3 charge -1.06",
		  "set type 4 charge 0.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m376273_auto   #####
def m376273_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -1.7",
		  "set type 1 charge 0.91",
		  "set type 2 charge 0.95",
		  "set type 3 charge 0.39",
		  "set type 4 charge -1.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m376533_auto   #####
def m376533_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.238000 3.028165",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ca': 1, 'B': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ca': 40.078, 'B': 10.811, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.54",
		  "set type 2 charge 0.93",
		  "set type 3 charge -1.11",
		  "set type 4 charge 0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m377040_auto   #####
def m377040_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.180000 3.637539",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.035000 3.396106",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'B': 1, 'O': 2, 'K': 3, 'Li': 4}

    atom_type_masses = {'B': 10.811, 'O': 15.9994, 'K': 39.0983, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.13",
		  "set type 2 charge -0.97",
		  "set type 3 charge 0.73",
		  "set type 4 charge 0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m377041_auto   #####
def m377041_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 1.53",
		  "set type 3 charge -1.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m377896_auto   #####
def m377896_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3, 'Br': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 0.51",
		  "set type 3 charge -1.86",
		  "set type 4 charge -0.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m378409_auto   #####
def m378409_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.180000 3.637539",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.040000 3.665157",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'B': 1, 'O': 2, 'Rb': 3, 'Li': 4}

    atom_type_masses = {'B': 10.811, 'O': 15.9994, 'Rb': 85.4678, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.06",
		  "set type 2 charge -0.93",
		  "set type 3 charge 0.79",
		  "set type 4 charge 0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m378571_auto   #####
def m378571_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Y': 2, 'B': 3, 'H': 4}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 1.23",
		  "set type 3 charge -0.46",
		  "set type 4 charge -0.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m378656_auto   #####
def m378656_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.39",
		  "set type 3 charge -2.2"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m379292_auto   #####
def m379292_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.059000 2.819694",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Nb': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'Nb': 92.90638, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.6",
		  "set type 2 charge -1.11",
		  "set type 3 charge 1.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m379424_auto   #####
def m379424_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.291000 3.746229",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Ga': 2, 'Se': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Ga': 69.723, 'Se': 78.96, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.47",
		  "set type 2 charge 0.72",
		  "set type 3 charge -0.84",
		  "set type 4 charge 0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m380256_auto   #####
def m380256_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.339000 4.009044"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'S': 3, 'I': 4}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'S': 32.065, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge -0.79",
		  "set type 2 charge 0.48",
		  "set type 3 charge -0.79",
		  "set type 4 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m381146_auto   #####
def m381146_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Si': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.33",
		  "set type 3 charge -0.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m383053_auto   #####
def m383053_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'B': 2, 'O': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'O': 15.9994, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.29",
		  "set type 3 charge -0.98",
		  "set type 4 charge -0.59"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m383292_auto   #####
def m383292_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'K': 1, 'Li': 2, 'H': 3, 'N': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'H': 1.00794, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.76",
		  "set type 3 charge 0.28",
		  "set type 4 charge -1.26"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m383305_auto   #####
def m383305_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.180000 3.637539",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'B': 1, 'O': 2, 'Li': 3}

    atom_type_masses = {'B': 10.811, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.27",
		  "set type 2 charge -0.97",
		  "set type 3 charge 0.92"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m384261_auto   #####
def m384261_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.044000 2.571134"]
    
    atom_types = {'K': 1, 'Li': 2, 'B': 3, 'H': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'B': 10.811, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 0.74",
		  "set type 3 charge -0.33",
		  "set type 4 charge -0.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m385382_auto   #####
def m385382_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 1.37",
		  "set type 3 charge 1.68",
		  "set type 4 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m385438_auto   #####
def m385438_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 1.37",
		  "set type 3 charge 1.91",
		  "set type 4 charge -1.31"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m385763_auto   #####
def m385763_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.251000 3.731975",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Br': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Br': 79.904, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 1 charge 0.81",
		  "set type 2 charge -0.78",
		  "set type 2 charge -0.78",
		  "set type 3 charge -0.85",
		  "set type 3 charge -0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m386694_auto   #####
def m386694_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 1.4",
		  "set type 3 charge 0.1",
		  "set type 4 charge -0.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m387925_auto   #####
def m387925_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.013000 2.637951",
	       "pair_coeff 2 2 0.291000 3.746229",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Mn': 1, 'Se': 2, 'Li': 3}

    atom_type_masses = {'Mn': 54.938045, 'Se': 78.96, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.62",
		  "set type 2 charge -0.7",
		  "set type 3 charge 0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m388588_auto   #####
def m388588_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.51",
		  "set type 3 charge 1.7",
		  "set type 4 charge -1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m388800_auto   #####
def m388800_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.251000 3.731975"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Br': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 1 charge 0.85",
		  "set type 2 charge 0.91",
		  "set type 2 charge 0.91",
		  "set type 3 charge -0.89",
		  "set type 3 charge -0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m389371_auto   #####
def m389371_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'Cl': 3}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.46",
		  "set type 3 charge -0.51"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m393049_auto   #####
def m393049_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.415000 3.904809",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'Ga': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'Ga': 69.723, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 0.9",
		  "set type 3 charge 0.84",
		  "set type 4 charge -0.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m393545_auto   #####
def m393545_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.599000 3.976081",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'In': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'In': 114.818, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 1.26",
		  "set type 3 charge 1.05",
		  "set type 4 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m393576_auto   #####
def m393576_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.54",
		  "set type 3 charge 1.56",
		  "set type 4 charge -1.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m394067_auto   #####
def m394067_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'Cl': 3}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 0.84",
		  "set type 3 charge -0.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m394363_auto   #####
def m394363_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.2",
		  "set type 2 charge 5.67",
		  "set type 3 charge -3.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m394574_auto   #####
def m394574_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.014000 2.558661",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Co': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Co': 58.933195, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.12",
		  "set type 3 charge 1.69",
		  "set type 4 charge -1.15"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m395186_auto   #####
def m395186_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.639733",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ru': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.12",
		  "set type 2 charge 1.95",
		  "set type 3 charge -1.4"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m395386_auto   #####
def m395386_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.567000 3.912827",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Sn': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Sn': 118.71, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 1.03",
		  "set type 3 charge -0.94",
		  "set type 3 charge 1.09",
		  "set type 4 charge -0.94"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m395859_auto   #####
def m395859_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.066000 2.631715",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'Re': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Re': 186.207, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.15",
		  "set type 2 charge 2.28",
		  "set type 3 charge 2.24",
		  "set type 4 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m396602_auto   #####
def m396602_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.010000 3.184963",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nd': 2, 'H': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Nd': 144.242, 'H': 1.00794, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 5.06",
		  "set type 2 charge 2.28",
		  "set type 3 charge -2.44",
		  "set type 4 charge -2.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m396974_auto   #####
def m396974_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.26",
		  "set type 3 charge 1.05",
		  "set type 4 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m400759_auto   #####
def m400759_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.010000 3.212581",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Pr': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Pr': 140.90765, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge 2.22",
		  "set type 3 charge -2.63"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m403002_auto   #####
def m403002_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.639733",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ru': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.15",
		  "set type 2 charge 2.15",
		  "set type 3 charge -1.48"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m403106_auto   #####
def m403106_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.26",
		  "set type 2 charge 1.92",
		  "set type 3 charge -2.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m403121_auto   #####
def m403121_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.010000 3.212581",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Pr': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Pr': 140.90765, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.68",
		  "set type 2 charge 1.51",
		  "set type 3 charge -2.18"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m403175_auto   #####
def m403175_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'V': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 1.62",
		  "set type 3 charge -0.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m403453_auto   #####
def m403453_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 1.04",
		  "set type 3 charge 1.15",
		  "set type 4 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m403749_auto   #####
def m403749_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.073000 2.530152",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Ir': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Ir': 192.217, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.53",
		  "set type 2 charge 0.64",
		  "set type 3 charge 0.57",
		  "set type 4 charge -0.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m404131_auto   #####
def m404131_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'F': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'F': 18.9984032, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 1.59",
		  "set type 3 charge -0.47",
		  "set type 4 charge -0.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m404360_auto   #####
def m404360_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.007000 3.074491",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Tb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Tb': 158.92535, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 2.09",
		  "set type 3 charge -1.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m404491_auto   #####
def m404491_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 1.32",
		  "set type 3 charge -1.15"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m404836_auto   #####
def m404836_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.34",
		  "set type 3 charge 1.61",
		  "set type 4 charge -1.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m405323_auto   #####
def m405323_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.066000 2.631715",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'Re': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Re': 186.207, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.15",
		  "set type 2 charge 2.28",
		  "set type 3 charge 2.24",
		  "set type 4 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m405819_auto   #####
def m405819_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.46",
		  "set type 3 charge -0.6"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m405823_auto   #####
def m405823_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.041000 3.242871",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Lu': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Lu': 174.9668, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.2",
		  "set type 2 charge -0.55",
		  "set type 3 charge 0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m406025_auto   #####
def m406025_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.11",
		  "set type 2 charge 2.52",
		  "set type 3 charge -1.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m410094_auto   #####
def m410094_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.073000 2.530152"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Ir': 3}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Ir': 192.217}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.21",
		  "set type 2 charge -0.4",
		  "set type 3 charge 0.61"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m410310_auto   #####
def m410310_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.009000 3.000547",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Gd': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Gd': 157.25, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 2.12",
		  "set type 3 charge -1.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m410945_auto   #####
def m410945_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -1.24",
		  "set type 1 charge -1.24",
		  "set type 1 charge 0.45",
		  "set type 1 charge 0.45",
		  "set type 2 charge 0.38",
		  "set type 2 charge 0.38",
		  "set type 3 charge -1.24",
		  "set type 3 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m411367_auto   #####
def m411367_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.31",
		  "set type 3 charge 1.84",
		  "set type 4 charge -1.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m411536_auto   #####
def m411536_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.639733",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ru': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.13",
		  "set type 2 charge 2.33",
		  "set type 3 charge -1.43"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m412382_auto   #####
def m412382_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.036000 2.804549",
	       "pair_coeff 3 3 0.056000 2.639733",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ag': 2, 'Ru': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ag': 107.8682, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.45",
		  "set type 3 charge 1.42",
		  "set type 4 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m413614_auto   #####
def m413614_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Br': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 0.31",
		  "set type 3 charge -0.46"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m416260_auto   #####
def m416260_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.008000 3.111909",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Eu': 2, 'As': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Eu': 151.964, 'As': 74.9216, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.41",
		  "set type 3 charge 0.59",
		  "set type 4 charge -0.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m416443_auto   #####
def m416443_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.008000 3.111909",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Eu': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Eu': 151.964, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.26",
		  "set type 2 charge 0.31",
		  "set type 3 charge -0.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m417846_auto   #####
def m417846_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
               "pair_modify tail yes mix arithmetic",
               "special_bonds lj/coul 0.0 0.0 1.0",
               "dielectric 1.0",
               "kspace_style ewald 1.0e-5",
               "pair_coeff 1 1 0.025000 2.183593",
               "pair_coeff 2 2 0.048000 2.670914",
               "pair_coeff 3 3 0.060000 3.118146"]

    atom_types = {'Li': 1, 'Tc': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Tc': 98.0, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
                     "atom_style full",
                     "boundary p p p"]

    amendments = ["set type 1 charge 1.74",
                  "set type 2 charge 1.37",
                  "set type 3 charge -1.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)

    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m418563_auto   #####
def m418563_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.067000 2.734168",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'W': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 2.03",
		  "set type 3 charge 2.49",
		  "set type 4 charge -1.0"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m419013_auto   #####
def m419013_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.037000 2.779604",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'Os': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Os': 190.23, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.2",
		  "set type 2 charge 2.29",
		  "set type 3 charge -1.34",
		  "set type 3 charge 2.26",
		  "set type 4 charge -1.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m419825_auto   #####
def m419825_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.073000 2.530152",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'Ir': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Ir': 192.217, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.27",
		  "set type 2 charge 2.33",
		  "set type 3 charge 2.22",
		  "set type 4 charge -1.36"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m419937_auto   #####
def m419937_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'P': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 1.26",
		  "set type 3 charge -0.53"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m420048_auto   #####
def m420048_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Fe': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Fe': 55.845, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.33",
		  "set type 2 charge -0.09",
		  "set type 3 charge -0.25",
		  "set type 4 charge 0.27"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m420556_auto   #####
def m420556_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.291000 3.746229",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Se': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Se': 78.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.9",
		  "set type 3 charge -0.55"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m421705_auto   #####
def m421705_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.62",
		  "set type 3 charge 1.21",
		  "set type 4 charge -1.13"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m421766_auto   #####
def m421766_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.44",
		  "set type 3 charge 1.48",
		  "set type 4 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m421918_auto   #####
def m421918_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.567000 3.912827",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Sn': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Sn': 118.71, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 0.9",
		  "set type 3 charge -0.84",
		  "set type 3 charge 0.93",
		  "set type 4 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m422887_auto   #####
def m422887_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.09",
		  "set type 2 charge 2.5",
		  "set type 3 charge -1.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m426306_auto   #####
def m426306_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Bi': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Bi': 208.9804, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.01",
		  "set type 2 charge 2.61",
		  "set type 3 charge -1.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m426442_auto   #####
def m426442_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 2.02",
		  "set type 3 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m426672_auto   #####
def m426672_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.014000 2.558661",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Co': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Co': 58.933195, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 1.4",
		  "set type 3 charge 1.72",
		  "set type 4 charge -1.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m427642_auto   #####
def m427642_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.16",
		  "set type 2 charge 2.66",
		  "set type 3 charge -1.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m428419_auto   #####
def m428419_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'V': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.48",
		  "set type 3 charge 1.88",
		  "set type 4 charge -1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m428541_auto   #####
def m428541_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.009000 3.000547",
	       "pair_coeff 3 3 0.056000 2.639733",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Gd': 2, 'Ru': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Gd': 157.25, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 2.17",
		  "set type 3 charge 2.04",
		  "set type 4 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m428544_auto   #####
def m428544_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.524807",
	       "pair_coeff 3 3 0.067000 2.734168",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ni': 2, 'W': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ni': 58.6934, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.03",
		  "set type 2 charge 1.52",
		  "set type 3 charge 2.76",
		  "set type 4 charge -1.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m428722_auto   #####
def m428722_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 1.39",
		  "set type 3 charge 1.88",
		  "set type 4 charge -1.31"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m428799_auto   #####
def m428799_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.073000 2.530152",
	       "pair_coeff 4 4 0.339000 4.009044"]
    
    atom_types = {'Li': 1, 'La': 2, 'Ir': 3, 'I': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'Ir': 192.217, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.49",
		  "set type 2 charge 0.59",
		  "set type 3 charge -0.28",
		  "set type 3 charge -0.7",
		  "set type 4 charge -0.28"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m428849_auto   #####
def m428849_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.008000 3.111909",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Eu': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Eu': 151.964, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.23",
		  "set type 2 charge 0.53",
		  "set type 3 charge -0.38"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m429420_auto   #####
def m429420_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.008000 3.111909",
	       "pair_coeff 3 3 0.056000 2.639733",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Eu': 2, 'Ru': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Eu': 151.964, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.18",
		  "set type 2 charge 2.25",
		  "set type 3 charge 2.25",
		  "set type 4 charge -1.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m429586_auto   #####
def m429586_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 1.08",
		  "set type 3 charge 0.47",
		  "set type 4 charge -0.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m429965_auto   #####
def m429965_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.33",
		  "set type 3 charge 2.19",
		  "set type 4 charge -0.84"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m434909_auto   #####
def m434909_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.005000 3.113691",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'Cu': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'Cu': 63.546, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 1.8",
		  "set type 3 charge 1.01",
		  "set type 4 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m435036_auto   #####
def m435036_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.010000 3.212581",
	       "pair_coeff 3 3 0.449000 3.937772"]
    
    atom_types = {'Li': 1, 'Pr': 2, 'Sb': 3}

    atom_type_masses = {'Li': 6.941, 'Pr': 140.90765, 'Sb': 121.76}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.06",
		  "set type 3 charge -1.32"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m435676_auto   #####
def m435676_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 0.86",
		  "set type 3 charge 1.53",
		  "set type 4 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m438584_auto   #####
def m438584_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.013000 2.594297",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Fe': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Fe': 55.845, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 0.93",
		  "set type 3 charge 1.33",
		  "set type 4 charge -1.49"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m438708_auto   #####
def m438708_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.639733",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ru': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 2.03",
		  "set type 3 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m439504_auto   #####
def m439504_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.009000 3.000547",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Gd': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Gd': 157.25, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.26",
		  "set type 2 charge 1.36",
		  "set type 3 charge -0.72",
		  "set type 4 charge 0.94"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m442492_auto   #####
def m442492_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 1.38",
		  "set type 3 charge 1.58",
		  "set type 4 charge -1.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m442520_auto   #####
def m442520_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.014000 2.558661",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Co': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Co': 58.933195, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 1.31",
		  "set type 3 charge 1.52",
		  "set type 4 charge -1.22"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m442814_auto   #####
def m442814_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Ge': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Ge': 72.64, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.02",
		  "set type 3 charge 0.99",
		  "set type 4 charge -0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m443023_auto   #####
def m443023_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 1.74",
		  "set type 3 charge -1.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m443136_auto   #####
def m443136_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 0.96",
		  "set type 3 charge 1.35",
		  "set type 4 charge -0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m443989_auto   #####
def m443989_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.567000 3.912827",
	       "pair_coeff 4 4 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Sn': 3, 'S': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Sn': 118.71, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.01",
		  "set type 3 charge -0.9",
		  "set type 3 charge 1.01",
		  "set type 4 charge -0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m444822_auto   #####
def m444822_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.014000 2.558661",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Co': 3, 'O': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Co': 58.933195, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 0.91",
		  "set type 3 charge 1.21",
		  "set type 4 charge -1.45"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m444984_auto   #####
def m444984_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.016000 2.800986",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'V': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'V': 50.9415, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.42",
		  "set type 2 charge 1.53",
		  "set type 3 charge -0.89",
		  "set type 4 charge 0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m445360_auto   #####
def m445360_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.013000 2.637951",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Mn': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 1.22",
		  "set type 3 charge 1.42",
		  "set type 4 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m447605_auto   #####
def m447605_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.274000 3.594776",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'S': 2, 'O': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'S': 32.065, 'O': 15.9994, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 1.59",
		  "set type 3 charge -0.64",
		  "set type 4 charge 0.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m448190_auto   #####
def m448190_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.524807",
	       "pair_coeff 3 3 0.449000 3.937772",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ni': 2, 'Sb': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ni': 58.6934, 'Sb': 121.76, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.16",
		  "set type 2 charge 1.33",
		  "set type 3 charge 3.13",
		  "set type 4 charge -1.55"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m449174_auto   #####
def m449174_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.016000 2.800986",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'V': 1, 'Ge': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'V': 50.9415, 'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.7",
		  "set type 2 charge 1.64",
		  "set type 3 charge -0.98",
		  "set type 4 charge 0.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m449473_auto   #####
def m449473_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 1.06",
		  "set type 3 charge 1.84",
		  "set type 4 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m452382_auto   #####
def m452382_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 1.78",
		  "set type 3 charge 1.45",
		  "set type 4 charge -0.98"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m452778_auto   #####
def m452778_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.059000 2.819694",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Nb': 1, 'Ge': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Nb': 92.90638, 'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.05",
		  "set type 2 charge 1.77",
		  "set type 3 charge -0.96",
		  "set type 4 charge 0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m452918_auto   #####
def m452918_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.015000 2.524807",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ni': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ni': 58.6934, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.05",
		  "set type 2 charge 1.03",
		  "set type 3 charge -0.6",
		  "set type 4 charge 0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m453731_auto   #####
def m453731_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.017000 2.828603",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ti': 1, 'As': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ti': 47.867, 'As': 74.9216, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.57",
		  "set type 2 charge 1.45",
		  "set type 3 charge -0.78",
		  "set type 4 charge 0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m454058_auto   #####
def m454058_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 1.85",
		  "set type 3 charge -0.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m455961_auto   #####
def m455961_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 1.29",
		  "set type 3 charge 1.2",
		  "set type 4 charge -0.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m456292_auto   #####
def m456292_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Bi': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Bi': 208.9804, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.22",
		  "set type 2 charge 0.11",
		  "set type 3 charge -0.94"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m456677_auto   #####
def m456677_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.014000 2.558661",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Co': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Co': 58.933195, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.28",
		  "set type 3 charge 1.78",
		  "set type 4 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m457429_auto   #####
def m457429_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.49",
		  "set type 3 charge 1.63",
		  "set type 4 charge -1.01"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m457545_auto   #####
def m457545_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Si': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 1.72",
		  "set type 3 charge -1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m458091_auto   #####
def m458091_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.009000 3.000547",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Gd': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Gd': 157.25, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge -0.72",
		  "set type 3 charge 0.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m463139_auto   #####
def m463139_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.228000 2.988965",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'K': 1, 'Li': 2, 'Yb': 3, 'F': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Yb': 173.054, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 0.93",
		  "set type 3 charge 2.04",
		  "set type 4 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m463729_auto   #####
def m463729_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Al': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.56",
		  "set type 2 charge 0.36",
		  "set type 3 charge -0.46"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m463795_auto   #####
def m463795_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 2 charge 0.95",
		  "set type 3 charge 1.09",
		  "set type 4 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m464438_auto   #####
def m464438_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'W': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 1.69",
		  "set type 3 charge -1.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m464877_auto   #####
def m464877_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'W': 2, 'Cl': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.47",
		  "set type 2 charge 0.23",
		  "set type 3 charge -0.12"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m465864_auto   #####
def m465864_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.010000 3.184963",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Nd': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Nd': 144.242, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 2.19",
		  "set type 3 charge 1.69",
		  "set type 4 charge -1.18"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m466184_auto   #####
def m466184_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.12",
		  "set type 2 charge 1.56",
		  "set type 3 charge 2.72",
		  "set type 4 charge -1.63"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m469720_auto   #####
def m469720_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'In': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.35",
		  "set type 3 charge 1.41",
		  "set type 4 charge -0.91"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m469784_auto   #####
def m469784_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.015000 2.693187",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Cr': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Cr': 51.9961, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 0.88",
		  "set type 3 charge 1.54",
		  "set type 4 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m470456_auto   #####
def m470456_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.056000 2.639733",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Ru': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Ru': 101.07, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.65",
		  "set type 2 charge 1.81",
		  "set type 3 charge -1.07",
		  "set type 4 charge 1.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m471515_auto   #####
def m471515_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 1.35",
		  "set type 3 charge 1.08",
		  "set type 4 charge -1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m472022_auto   #####
def m472022_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.07",
		  "set type 2 charge 2.12",
		  "set type 3 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m472598_auto   #####
def m472598_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.016000 2.800986",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'V': 1, 'As': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'V': 50.9415, 'As': 74.9216, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.37",
		  "set type 2 charge 1.44",
		  "set type 3 charge -0.73",
		  "set type 4 charge 0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m474045_auto   #####
def m474045_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.29",
		  "set type 3 charge 1.56",
		  "set type 4 charge -0.93"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m474391_auto   #####
def m474391_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.017000 2.828603",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Ti': 3, 'F': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Ti': 47.867, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 0.93",
		  "set type 3 charge 1.78",
		  "set type 4 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m474598_auto   #####
def m474598_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'N': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.22",
		  "set type 2 charge 0.55",
		  "set type 3 charge -0.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m474934_auto   #####
def m474934_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.09",
		  "set type 2 charge 2.22",
		  "set type 3 charge -1.37"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m475128_auto   #####
def m475128_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 0.86",
		  "set type 3 charge 1.65",
		  "set type 4 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m475865_auto   #####
def m475865_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.228000 2.988965",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Yb': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Yb': 173.054, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.59",
		  "set type 2 charge -0.65",
		  "set type 3 charge 0.26"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m476065_auto   #####
def m476065_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.111000 2.691405",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Mg': 2, 'Al': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Mg': 24.305, 'Al': 26.9815386, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.79",
		  "set type 3 charge 1.93",
		  "set type 4 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m477013_auto   #####
def m477013_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge 0.95",
		  "set type 3 charge 1.23",
		  "set type 4 charge -0.92"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m477331_auto   #####
def m477331_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.044000 2.571134"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'As': 3, 'H': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'As': 74.9216, 'H': 1.00794}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64",
		  "set type 2 charge 1.01",
		  "set type 3 charge -1.63",
		  "set type 4 charge -0.41"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m477976_auto   #####
def m477976_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'P': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.6",
		  "set type 2 charge 0.35",
		  "set type 3 charge -0.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m478456_auto   #####
def m478456_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Cr': 2, 'F': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Cr': 51.9961, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.75",
		  "set type 2 charge 1.46",
		  "set type 3 charge -0.68",
		  "set type 4 charge 0.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m478905_auto   #####
def m478905_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.081000 2.824149",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ta': 1, 'Ge': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ta': 180.94788, 'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.88",
		  "set type 2 charge 1.62",
		  "set type 3 charge -0.87",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m479024_auto   #####
def m479024_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.009000 3.000547",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'K': 1, 'Li': 2, 'Gd': 3, 'F': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Gd': 157.25, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 0.95",
		  "set type 3 charge 2.11",
		  "set type 4 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m479285_auto   #####
def m479285_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 1.32",
		  "set type 3 charge 2.04",
		  "set type 4 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m479861_auto   #####
def m479861_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.567000 3.912827",
	       "pair_coeff 4 4 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'Sn': 3, 'Se': 4}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'Sn': 118.71, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 0.77",
		  "set type 3 charge 0.66",
		  "set type 4 charge -0.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m481865_auto   #####
def m481865_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 1.81",
		  "set type 3 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m482220_auto   #####
def m482220_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.524807",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ni': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Ni': 58.6934, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 1.45",
		  "set type 3 charge -0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m482349_auto   #####
def m482349_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge -0.74",
		  "set type 2 charge 1.52",
		  "set type 3 charge -0.74"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m482444_auto   #####
def m482444_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.97",
		  "set type 2 charge 1.7",
		  "set type 3 charge -0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m482963_auto   #####
def m482963_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.015000 2.693187",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Cr': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Cr': 51.9961, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.33",
		  "set type 2 charge 1.5",
		  "set type 3 charge -0.87",
		  "set type 4 charge 0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m483238_auto   #####
def m483238_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.009000 3.000547",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Gd': 3, 'Cl': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Gd': 157.25, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.68",
		  "set type 2 charge 0.98",
		  "set type 3 charge 1.49",
		  "set type 4 charge -0.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m483333_auto   #####
def m483333_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.015000 2.693187",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Cr': 1, 'Ge': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Cr': 51.9961, 'Ge': 72.64, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.5",
		  "set type 2 charge 1.69",
		  "set type 3 charge -0.96",
		  "set type 4 charge 0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m484607_auto   #####
def m484607_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.013000 2.594297",
	       "pair_coeff 2 2 0.291000 3.746229",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Fe': 1, 'Se': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Fe': 55.845, 'Se': 78.96, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 0.44",
		  "set type 3 charge -0.44",
		  "set type 4 charge 0.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m485082_auto   #####
def m485082_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.013000 2.594297",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Fe': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Fe': 55.845, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 2 charge 0.84",
		  "set type 3 charge 1.2",
		  "set type 4 charge -1.33"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m487720_auto   #####
def m487720_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.059000 2.819694",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.035000 3.396106",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Nb': 1, 'O': 2, 'K': 3, 'Li': 4}

    atom_type_masses = {'Nb': 92.90638, 'O': 15.9994, 'K': 39.0983, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.67",
		  "set type 2 charge -0.79",
		  "set type 3 charge 0.71",
		  "set type 4 charge 0.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m487996_auto   #####
def m487996_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.015000 2.693187",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Cr': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Cr': 51.9961, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.79",
		  "set type 3 charge -0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m488937_auto   #####
def m488937_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.238000 3.028165",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ca': 1, 'N': 2, 'Li': 3}

    atom_type_masses = {'Ca': 40.078, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.33",
		  "set type 2 charge -0.12",
		  "set type 3 charge -0.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m492697_auto   #####
def m492697_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.013000 2.637951",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Mn': 1, 'P': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Mn': 54.938045, 'P': 30.973762, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.37",
		  "set type 2 charge 1.47",
		  "set type 3 charge -0.87",
		  "set type 4 charge 0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m493033_auto   #####
def m493033_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'W': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.1",
		  "set type 2 charge 2.48",
		  "set type 3 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m493198_auto   #####
def m493198_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.415000 3.904809",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ga': 1, 'Si': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ga': 69.723, 'Si': 28.0855, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.56",
		  "set type 2 charge 1.76",
		  "set type 3 charge -1.08",
		  "set type 4 charge 0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m495857_auto   #####
def m495857_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.180000 3.637539",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.025000 2.183593",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'B': 1, 'O': 2, 'Li': 3, 'Cl': 4}

    atom_type_masses = {'B': 10.811, 'O': 15.9994, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.78",
		  "set type 2 charge -1.3",
		  "set type 3 charge 0.98",
		  "set type 4 charge -1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m496381_auto   #####
def m496381_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.379000 3.813047",
	       "pair_coeff 2 2 0.060000 3.118146",
	       "pair_coeff 3 3 0.030000 2.657551",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ge': 1, 'O': 2, 'Na': 3, 'Li': 4}

    atom_type_masses = {'Ge': 72.64, 'O': 15.9994, 'Na': 22.98976928, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.74",
		  "set type 2 charge -0.98",
		  "set type 3 charge 0.97",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m496459_auto   #####
def m496459_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.111000 2.691405",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Mg': 1, 'Mn': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Mg': 24.305, 'Mn': 54.938045, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.58",
		  "set type 2 charge 1.77",
		  "set type 3 charge -1.1",
		  "set type 4 charge 0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m496516_auto   #####
def m496516_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.067000 2.734168",
	       "pair_coeff 3 3 0.105000 3.430851",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'W': 2, 'C': 3, 'Cl': 4}

    atom_type_masses = {'Li': 6.941, 'W': 183.84, 'C': 12.0107, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge 0.44",
		  "set type 3 charge -0.25",
		  "set type 4 charge -0.18",
		  "set type 4 charge -0.25"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m499555_auto   #####
def m499555_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.013000 3.168036",
	       "pair_coeff 2 2 0.050000 2.996983",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ce': 1, 'F': 2, 'Li': 3}

    atom_type_masses = {'Ce': 140.116, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.33",
		  "set type 2 charge -0.66",
		  "set type 3 charge 0.95"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m502375_auto   #####
def m502375_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Al': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Al': 26.9815386, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.55",
		  "set type 2 charge 1.51",
		  "set type 3 charge -1.73",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m505566_auto   #####
def m505566_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Cl': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.14",
		  "set type 1 charge 1.14",
		  "set type 2 charge 0.95",
		  "set type 2 charge 0.95",
		  "set type 3 charge -1.02",
		  "set type 3 charge -1.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m505667_auto   #####
def m505667_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.251000 3.731975"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Br': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.08",
		  "set type 1 charge 1.08",
		  "set type 2 charge 0.92",
		  "set type 2 charge 0.92",
		  "set type 3 charge -0.97",
		  "set type 3 charge -0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m506435_auto   #####
def m506435_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'Cl': 3}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 1 charge 0.81",
		  "set type 2 charge 0.85",
		  "set type 2 charge 0.85",
		  "set type 3 charge -0.83",
		  "set type 3 charge -0.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m506525_auto   #####
def m506525_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Cl': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 1 charge 0.76",
		  "set type 2 charge 0.75",
		  "set type 2 charge 0.75",
		  "set type 3 charge -0.76",
		  "set type 3 charge -0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m506742_auto   #####
def m506742_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'F': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 1 charge 0.88",
		  "set type 2 charge 0.83",
		  "set type 2 charge 0.83",
		  "set type 3 charge -0.86",
		  "set type 3 charge -0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m506763_auto   #####
def m506763_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'F': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.67",
		  "set type 1 charge 0.67",
		  "set type 2 charge 0.91",
		  "set type 2 charge 0.91",
		  "set type 3 charge -0.81",
		  "set type 3 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m506895_auto   #####
def m506895_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Na': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.81",
		  "set type 1 charge -0.81",
		  "set type 1 charge 0.03",
		  "set type 1 charge 0.03",
		  "set type 2 charge 0.51",
		  "set type 2 charge 0.51",
		  "set type 3 charge -0.81",
		  "set type 3 charge -0.81"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m507526_auto   #####
def m507526_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'N': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'N': 14.0067, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.07",
		  "set type 2 charge 1.61",
		  "set type 3 charge -0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m507930_auto   #####
def m507930_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'F': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 1 charge 0.8",
		  "set type 2 charge 0.86",
		  "set type 2 charge 0.86",
		  "set type 3 charge -0.82",
		  "set type 3 charge -0.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m509335_auto   #####
def m509335_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Cl': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 1 charge 0.75",
		  "set type 2 charge 0.75",
		  "set type 2 charge 0.75",
		  "set type 3 charge -0.75",
		  "set type 3 charge -0.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m509595_auto   #####
def m509595_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'N': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64",
		  "set type 1 charge 0.64",
		  "set type 2 charge 0.53",
		  "set type 2 charge 0.53",
		  "set type 3 charge -0.57",
		  "set type 3 charge -0.57"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m509800_auto   #####
def m509800_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'F': 3}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 1 charge 0.82",
		  "set type 2 charge 0.73",
		  "set type 2 charge 0.73",
		  "set type 3 charge -0.78",
		  "set type 3 charge -0.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m510190_auto   #####
def m510190_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.066000 2.631715",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Re': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Re': 186.207, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.57",
		  "set type 2 charge 2.27",
		  "set type 3 charge -1.57",
		  "set type 4 charge 0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m510414_auto   #####
def m510414_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Cl': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.14",
		  "set type 1 charge 1.14",
		  "set type 2 charge 0.96",
		  "set type 2 charge 0.96",
		  "set type 3 charge -1.0",
		  "set type 3 charge -1.0"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m510450_auto   #####
def m510450_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.339000 4.009044"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'I': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 1 charge 0.78",
		  "set type 2 charge 0.76",
		  "set type 2 charge 0.76",
		  "set type 3 charge -0.77",
		  "set type 3 charge -0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m510847_auto   #####
def m510847_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.95",
		  "set type 2 charge 2.28",
		  "set type 3 charge -1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m511140_auto   #####
def m511140_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.228000 2.537280",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'V': 2, 'Cd': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'Cd': 112.411, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.79",
		  "set type 2 charge 1.3",
		  "set type 3 charge 1.48",
		  "set type 4 charge -0.6"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m511263_auto   #####
def m511263_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.048000 2.582715",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Pd': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Pd': 106.42, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.56",
		  "set type 2 charge 0.27",
		  "set type 3 charge 0.96",
		  "set type 4 charge -0.3"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m512359_auto   #####
def m512359_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 2 charge 1.26",
		  "set type 3 charge -1.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m512911_auto   #####
def m512911_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'Al': 2, 'O': 3, 'Br': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'O': 15.9994, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.66",
		  "set type 2 charge 1.14",
		  "set type 3 charge -0.43",
		  "set type 4 charge -0.39"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m513805_auto   #####
def m513805_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.339000 4.009044"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'I': 3}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 1 charge 0.73",
		  "set type 2 charge 0.7",
		  "set type 2 charge 0.7",
		  "set type 3 charge -0.72",
		  "set type 3 charge -0.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m514955_auto   #####
def m514955_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.1",
		  "set type 2 charge 2.08",
		  "set type 3 charge -1.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m516197_auto   #####
def m516197_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 1.7",
		  "set type 3 charge -0.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m516686_auto   #####
def m516686_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.180000 3.637539",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'B': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'B': 10.811, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 1.74",
		  "set type 3 charge 1.25",
		  "set type 4 charge -1.17"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m517031_auto   #####
def m517031_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 1.33",
		  "set type 3 charge 2.23",
		  "set type 4 charge -0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m517265_auto   #####
def m517265_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.039000 2.933729",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Au': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Au': 196.966569, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 1.02",
		  "set type 3 charge -0.48"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m517435_auto   #####
def m517435_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.085000 2.445517",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Be': 3, 'F': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Be': 9.012182, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.91",
		  "set type 2 charge 0.86",
		  "set type 3 charge 1.0",
		  "set type 4 charge -0.67"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m517535_auto   #####
def m517535_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 2.35",
		  "set type 3 charge 1.93",
		  "set type 4 charge -0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m518465_auto   #####
def m518465_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Br': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.51",
		  "set type 2 charge 0.29",
		  "set type 3 charge -0.2"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m518645_auto   #####
def m518645_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.339000 4.009044"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'I': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.46",
		  "set type 2 charge 0.12",
		  "set type 3 charge -0.15"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m519815_auto   #####
def m519815_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ge': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Ge': 72.64, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 1.76",
		  "set type 3 charge -0.6"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m520345_auto   #####
def m520345_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.251000 3.731975"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Br': 3}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Br': 79.904}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.5",
		  "set type 2 charge 0.23",
		  "set type 3 charge -0.18"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m521372_auto   #####
def m521372_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.274000 3.594776",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'S': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'S': 32.065, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 0.91",
		  "set type 3 charge 1.62",
		  "set type 4 charge -0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m521806_auto   #####
def m521806_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 1.38",
		  "set type 3 charge 1.51",
		  "set type 4 charge -0.94"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m524651_auto   #####
def m524651_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ga': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ga': 69.723, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.93",
		  "set type 2 charge 1.48",
		  "set type 3 charge 1.67",
		  "set type 4 charge -1.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m525251_auto   #####
def m525251_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.680000 3.872737",
	       "pair_coeff 3 3 0.056000 2.719023",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Tl': 2, 'Mo': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Tl': 204.3833, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.0",
		  "set type 2 charge 0.64",
		  "set type 3 charge 2.03",
		  "set type 4 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m526491_auto   #####
def m526491_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.069000 2.783168",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Zr': 2, 'F': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Zr': 91.224, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.87",
		  "set type 2 charge 2.18",
		  "set type 3 charge -0.65",
		  "set type 4 charge 0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m526655_auto   #####
def m526655_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 1.69",
		  "set type 3 charge -0.94"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m527191_auto   #####
def m527191_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'K': 1, 'Li': 2, 'Al': 3, 'F': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Al': 26.9815386, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 0.87",
		  "set type 3 charge 1.33",
		  "set type 4 charge -0.64"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m528086_auto   #####
def m528086_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.415000 3.904809",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ga': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Ga': 69.723, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.39",
		  "set type 2 charge 1.23",
		  "set type 3 charge -1.69",
		  "set type 4 charge 0.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m529911_auto   #####
def m529911_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.016000 2.800986",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'V': 1, 'Te': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'V': 50.9415, 'Te': 127.6, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.22",
		  "set type 2 charge 0.89",
		  "set type 3 charge -0.57",
		  "set type 4 charge 0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m531531_auto   #####
def m531531_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.016000 2.800986",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'V': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'V': 50.9415, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.04",
		  "set type 2 charge 2.23",
		  "set type 3 charge -1.34"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m532696_auto   #####
def m532696_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.594297",
	       "pair_coeff 3 3 0.105000 3.430851",
	       "pair_coeff 4 4 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Fe': 2, 'C': 3, 'N': 4}

    atom_type_masses = {'Li': 6.941, 'Fe': 55.845, 'C': 12.0107, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.8",
		  "set type 2 charge -2.01",
		  "set type 3 charge 0.65",
		  "set type 4 charge -0.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m534406_auto   #####
def m534406_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 2.783168",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Zr': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Zr': 91.224, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 2.65",
		  "set type 3 charge -0.78"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m78489_auto   #####
def m78489_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 0.71",
		  "set type 3 charge -2.44"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m78612_auto   #####
def m78612_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.105000 3.430851"]
    
    atom_types = {'Li': 1, 'B': 2, 'C': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'C': 12.0107}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.42",
		  "set type 2 charge -0.12",
		  "set type 3 charge -0.62"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m78723_auto   #####
def m78723_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sb': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Sb': 121.76, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.98",
		  "set type 2 charge 2.08",
		  "set type 3 charge -0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m78754_auto   #####
def m78754_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'As': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'As': 74.9216, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.44",
		  "set type 2 charge -1.8",
		  "set type 3 charge 0.72"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m79493_auto   #####
def m79493_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.073000 2.530152",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ir': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Ir': 192.217, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.56",
		  "set type 2 charge 1.33",
		  "set type 3 charge -1.14",
		  "set type 4 charge 0.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m79625_auto   #####
def m79625_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.72",
		  "set type 2 charge 0.77",
		  "set type 3 charge -0.74"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m79842_auto   #####
def m79842_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.006000 3.005892",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Tm': 3, 'Cl': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Tm': 168.93421, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.7",
		  "set type 2 charge 0.88",
		  "set type 3 charge 1.36",
		  "set type 4 charge -0.61"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m79854_auto   #####
def m79854_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.88",
		  "set type 2 charge 2.97",
		  "set type 3 charge -1.52"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m80278_auto   #####
def m80278_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.339000 4.009044"]
    
    atom_types = {'Li': 1, 'H': 2, 'N': 3, 'I': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'N': 14.0067, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 0.48",
		  "set type 3 charge -1.39",
		  "set type 4 charge -0.89"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m81168_auto   #####
def m81168_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.050000 2.996983",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Al': 2, 'F': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Al': 26.9815386, 'F': 18.9984032, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.81",
		  "set type 2 charge 1.38",
		  "set type 3 charge -0.68",
		  "set type 4 charge 0.9"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m81677_auto   #####
def m81677_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.048000 2.582715",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Pd': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Pd': 106.42, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.56",
		  "set type 2 charge -0.04",
		  "set type 3 charge 0.99",
		  "set type 4 charge -0.25"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m82071_auto   #####
def m82071_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Al': 3, 'F': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Al': 26.9815386, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 0.68",
		  "set type 3 charge 1.45",
		  "set type 4 charge -0.63"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m82553_auto   #####
def m82553_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.067000 2.734168",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Y': 2, 'W': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'W': 183.84, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.09",
		  "set type 2 charge 2.28",
		  "set type 3 charge 2.47",
		  "set type 4 charge -1.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m82763_auto   #####
def m82763_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.228000 2.537280",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Cd': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Cd': 112.411, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64",
		  "set type 2 charge 1.55",
		  "set type 3 charge -2.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m82818_auto   #####
def m82818_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.379000 3.813047",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ge': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'Ge': 72.64, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.11",
		  "set type 2 charge 0.05",
		  "set type 3 charge 0.07"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m83325_auto   #####
def m83325_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.305000 3.694557",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'In': 2, 'P': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.84",
		  "set type 2 charge 1.59",
		  "set type 3 charge 1.45",
		  "set type 4 charge -0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m83657_auto   #####
def m83657_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.019000 2.935511",
	       "pair_coeff 3 3 0.274000 3.594776"]
    
    atom_types = {'Li': 1, 'Sc': 2, 'S': 3}

    atom_type_masses = {'Li': 6.941, 'Sc': 44.955912, 'S': 32.065}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 1 charge 0.82",
		  "set type 2 charge -0.96",
		  "set type 2 charge -0.96",
		  "set type 2 charge 1.09",
		  "set type 2 charge 1.09",
		  "set type 3 charge -0.96",
		  "set type 3 charge -0.96"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m83867_auto   #####
def m83867_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 3.137745",
	       "pair_coeff 3 3 0.105000 3.430851",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'La': 2, 'C': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'La': 138.90547, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 2.41",
		  "set type 3 charge 1.18",
		  "set type 4 charge -0.94"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m84214_auto   #####
def m84214_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.008000 3.111909",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Eu': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Eu': 151.964, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.1",
		  "set type 2 charge 1.38",
		  "set type 3 charge -2.47"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m84423_auto   #####
def m84423_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.005000 3.113691",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Cu': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Cu': 63.546, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.03",
		  "set type 2 charge 0.6",
		  "set type 3 charge -2.22"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m84451_auto   #####
def m84451_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Bi': 2, 'Li': 3}

    atom_type_masses = {'Sr': 87.62, 'Bi': 208.9804, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.23",
		  "set type 2 charge -2.03",
		  "set type 3 charge 0.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m84628_auto   #####
def m84628_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.251000 3.731975",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Br': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Br': 79.904, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.9",
		  "set type 1 charge 0.9",
		  "set type 2 charge -0.97",
		  "set type 2 charge -0.97",
		  "set type 3 charge -2.54",
		  "set type 3 charge -2.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m85048_auto   #####
def m85048_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'P': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 1.82",
		  "set type 3 charge -1.14"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m85314_auto   #####
def m85314_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.719023",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mo': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.33",
		  "set type 2 charge 0.66",
		  "set type 3 charge -0.5"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m85471_auto   #####
def m85471_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.08",
		  "set type 2 charge 2.59",
		  "set type 3 charge -1.58"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m85875_auto   #####
def m85875_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.567000 3.912827",
	       "pair_coeff 4 4 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'Sn': 3, 'Se': 4}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'Sn': 118.71, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.73",
		  "set type 2 charge 0.85",
		  "set type 3 charge 0.84",
		  "set type 4 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m86287_auto   #####
def m86287_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.72",
		  "set type 2 charge 0.76",
		  "set type 3 charge -0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m86501_auto   #####
def m86501_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.066000 2.631715",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Re': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Re': 186.207, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 12.76",
		  "set type 2 charge 1.49",
		  "set type 3 charge 15.6",
		  "set type 4 charge -5.22"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m86535_auto   #####
def m86535_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.039000 2.933729"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Au': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Au': 196.966569}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.51",
		  "set type 2 charge -0.11",
		  "set type 3 charge -0.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m86971_auto   #####
def m86971_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.663000 3.828192",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Pb': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Pb': 207.2, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 0.89",
		  "set type 3 charge 1.44",
		  "set type 4 charge -1.24"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m87691_auto   #####
def m87691_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.005000 3.113691",
	       "pair_coeff 4 4 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Cu': 3, 'P': 4}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Cu': 63.546, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.47",
		  "set type 2 charge 2.04",
		  "set type 3 charge 1.22",
		  "set type 4 charge -2.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m87714_auto   #####
def m87714_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.04",
		  "set type 2 charge 2.2",
		  "set type 3 charge -1.42"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m88033_auto   #####
def m88033_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.339000 4.009044",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'I': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'I': 126.90447, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 1 charge 0.83",
		  "set type 2 charge -0.62",
		  "set type 2 charge -0.62",
		  "set type 3 charge -1.03",
		  "set type 3 charge -1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m88077_auto   #####
def m88077_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mn': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mn': 54.938045, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.4",
		  "set type 2 charge 1.5",
		  "set type 3 charge -0.73"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m88149_auto   #####
def m88149_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.518000 3.893227",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Bi': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Bi': 208.9804, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 0.43",
		  "set type 3 charge -0.56"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m88325_auto   #####
def m88325_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.014000 2.558661",
	       "pair_coeff 3 3 0.105000 3.430851",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Co': 2, 'C': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Co': 58.933195, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge -1.27",
		  "set type 2 charge 0.55",
		  "set type 3 charge 0.55",
		  "set type 4 charge -0.43"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m88607_auto   #####
def m88607_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'O': 3}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.5",
		  "set type 1 charge 0.5",
		  "set type 2 charge 0.53",
		  "set type 2 charge 0.53",
		  "set type 3 charge -1.03",
		  "set type 3 charge -1.03"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m88716_auto   #####
def m88716_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.980056",
	       "pair_coeff 3 3 0.567000 3.912827"]
    
    atom_types = {'Li': 1, 'Y': 2, 'Sn': 3}

    atom_type_masses = {'Li': 6.941, 'Y': 88.90585, 'Sn': 118.71}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 1.16",
		  "set type 3 charge -1.85"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m89047_auto   #####
def m89047_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.680000 3.872737",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Tl': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Tl': 204.3833, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.09",
		  "set type 1 charge 0.09",
		  "set type 2 charge -0.22",
		  "set type 2 charge -0.22",
		  "set type 3 charge 0.02",
		  "set type 3 charge 0.02"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m89626_auto   #####
def m89626_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 3.260689",
	       "pair_coeff 3 3 0.227000 3.516377"]
    
    atom_types = {'Li': 1, 'N': 2, 'Cl': 3}

    atom_type_masses = {'Li': 6.941, 'N': 14.0067, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 1 charge 0.87",
		  "set type 2 charge -2.6",
		  "set type 2 charge -2.6",
		  "set type 3 charge -0.88",
		  "set type 3 charge -0.88"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m89748_auto   #####
def m89748_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -1.0",
		  "set type 2 charge -0.7",
		  "set type 3 charge 1.2"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m89776_auto   #####
def m89776_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.305000 3.694557",
	       "pair_coeff 3 3 0.044000 2.571134",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'P': 2, 'H': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'P': 30.973762, 'H': 1.00794, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge 1.07",
		  "set type 3 charge -0.1",
		  "set type 4 charge -0.87"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m90213_auto   #####
def m90213_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.379000 3.813047"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Ge': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Ge': 72.64}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.07",
		  "set type 2 charge 0.73",
		  "set type 3 charge -1.8"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m90271_auto   #####
def m90271_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Ta': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Ta': 180.94788, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 2.19",
		  "set type 2 charge 2.98",
		  "set type 3 charge -1.44",
		  "set type 4 charge 0.97"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m90520_auto   #####
def m90520_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.402000 3.826410"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Si': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Si': 28.0855}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.62",
		  "set type 2 charge 0.91",
		  "set type 3 charge -2.15"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m90694_auto   #####
def m90694_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.056000 2.639733",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Ru': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Ru': 101.07, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 1.61",
		  "set type 3 charge 1.66",
		  "set type 4 charge -1.23"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m90798_auto   #####
def m90798_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.505000 4.008153",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Al': 3, 'F': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Al': 26.9815386, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 0.81",
		  "set type 3 charge 1.45",
		  "set type 4 charge -0.57"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m90960_auto   #####
def m90960_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.680000 3.872737",
	       "pair_coeff 3 3 0.036000 2.804549"]
    
    atom_types = {'Li': 1, 'Tl': 2, 'Ag': 3}

    atom_type_masses = {'Li': 6.941, 'Tl': 204.3833, 'Ag': 107.8682}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.44",
		  "set type 2 charge -1.41",
		  "set type 3 charge 0.53"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m90997_auto   #####
def m90997_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.085000 2.445517",
	       "pair_coeff 3 3 0.305000 3.694557"]
    
    atom_types = {'Li': 1, 'Be': 2, 'P': 3}

    atom_type_masses = {'Li': 6.941, 'Be': 9.012182, 'P': 30.973762}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.86",
		  "set type 2 charge 0.82",
		  "set type 3 charge -1.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m91065_auto   #####
def m91065_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.398000 3.982317",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Te': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Te': 127.6, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.64 1.03",
		  "set type 1 charge 0.64 1.03",
		  "set type 2 charge 0.66",
		  "set type 3 charge -0.65 -0.54",
		  "set type 3 charge -0.65 -0.54"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m91389_auto   #####
def m91389_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.081000 2.824149",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ta': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.11",
		  "set type 2 charge 2.85",
		  "set type 3 charge -1.21"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m91403_auto   #####
def m91403_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.044000 2.571134",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.339000 4.009044"]
    
    atom_types = {'Li': 1, 'H': 2, 'O': 3, 'I': 4}

    atom_type_masses = {'Li': 6.941, 'H': 1.00794, 'O': 15.9994, 'I': 126.90447}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 0.42",
		  "set type 3 charge -1.04",
		  "set type 4 charge -0.75"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m91697_auto   #####
def m91697_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.016000 2.800986",
	       "pair_coeff 4 4 0.227000 3.516377"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'V': 3, 'Cl': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'V': 50.9415, 'Cl': 35.453}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.69",
		  "set type 2 charge 0.44",
		  "set type 3 charge 0.48",
		  "set type 4 charge -0.38"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m91762_auto   #####
def m91762_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.056000 2.719023",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Mo': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Mo': 95.96, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.99",
		  "set type 2 charge 2.51",
		  "set type 3 charge -1.29"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m92000_auto   #####
def m92000_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'K': 1, 'Li': 2, 'Se': 3}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.55",
		  "set type 1 charge 0.55",
		  "set type 2 charge 0.55",
		  "set type 2 charge 0.55",
		  "set type 3 charge -1.1",
		  "set type 3 charge -1.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m92537_auto   #####
def m92537_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.081000 2.824149",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'K': 1, 'Li': 2, 'Ta': 3, 'O': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'Ta': 180.94788, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 0.96",
		  "set type 3 charge 3.18",
		  "set type 4 charge -1.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m92813_auto   #####
def m92813_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.4",
		  "set type 2 charge 0.64",
		  "set type 3 charge -1.04"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m92834_auto   #####
def m92834_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.048000 2.582715"]
    
    atom_types = {'Li': 1, 'B': 2, 'Pd': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'Pd': 106.42}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.15",
		  "set type 2 charge 0.49",
		  "set type 3 charge -0.26"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m92924_auto   #####
def m92924_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'As': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 1.23",
		  "set type 3 charge -0.68"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m93000_auto   #####
def m93000_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.124000 2.461553",
	       "pair_coeff 3 3 0.309000 3.768502"]
    
    atom_types = {'Li': 1, 'Zn': 2, 'As': 3}

    atom_type_masses = {'Li': 6.941, 'Zn': 65.38, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.49",
		  "set type 2 charge 2.06",
		  "set type 3 charge -3.55"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m93355_auto   #####
def m93355_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.036000 2.804549"]
    
    atom_types = {'Li': 1, 'Al': 2, 'Ag': 3}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'Ag': 107.8682}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge -0.67",
		  "set type 3 charge -0.5"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m93524_auto   #####
def m93524_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Sb': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Sb': 121.76, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.56",
		  "set type 2 charge 1.84",
		  "set type 3 charge -1.22",
		  "set type 4 charge 0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m93827_auto   #####
def m93827_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.402000 3.826410",
	       "pair_coeff 3 3 0.080000 2.453535"]
    
    atom_types = {'Li': 1, 'Si': 2, 'Pt': 3}

    atom_type_masses = {'Li': 6.941, 'Si': 28.0855, 'Pt': 195.084}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge -0.02",
		  "set type 2 charge 0.21",
		  "set type 3 charge -0.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m94032_auto   #####
def m94032_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.040000 3.665157",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Rb': 1, 'Li': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Rb': 85.4678, 'Li': 6.941, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 0.73",
		  "set type 3 charge 1.0",
		  "set type 4 charge -0.86"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m94160_auto   #####
def m94160_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.599000 3.976081",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'In': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'In': 114.818, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge 1.33",
		  "set type 3 charge -0.53"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m94430_auto   #####
def m94430_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Sn': 2, 'Li': 3}

    atom_type_masses = {'Ba': 137.327, 'Sn': 118.71, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.87",
		  "set type 2 charge -0.52",
		  "set type 3 charge 0.4"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m94457_auto   #####
def m94457_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.035000 3.396106",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.599000 3.976081",
	       "pair_coeff 4 4 0.309000 3.768502"]
    
    atom_types = {'K': 1, 'Li': 2, 'In': 3, 'As': 4}

    atom_type_masses = {'K': 39.0983, 'Li': 6.941, 'In': 114.818, 'As': 74.9216}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.65",
		  "set type 2 charge 0.5",
		  "set type 3 charge 0.56",
		  "set type 4 charge -1.18"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m94614_auto   #####
def m94614_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.014000 2.558661",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Co': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Co': 58.933195, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.78",
		  "set type 2 charge -0.14",
		  "set type 3 charge -0.9",
		  "set type 4 charge 0.4"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m94926_auto   #####
def m94926_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.013000 3.168036",
	       "pair_coeff 3 3 0.228000 2.537280",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ce': 2, 'Cd': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Ce': 140.116, 'Cd': 112.411, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.04",
		  "set type 2 charge 2.52",
		  "set type 3 charge 1.72",
		  "set type 4 charge -0.79"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m94984_auto   #####
def m94984_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.036000 2.804549",
	       "pair_coeff 3 3 0.105000 3.430851"]
    
    atom_types = {'Li': 1, 'Ag': 2, 'C': 3}

    atom_type_masses = {'Li': 6.941, 'Ag': 107.8682, 'C': 12.0107}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.75",
		  "set type 2 charge -0.05",
		  "set type 3 charge -0.35"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m95034_auto   #####
def m95034_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.309000 3.768502",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'As': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.47",
		  "set type 2 charge -0.22",
		  "set type 3 charge -0.08"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m95123_auto   #####
def m95123_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.017000 2.828603",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Ti': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Ti': 47.867, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.82",
		  "set type 2 charge 1.87",
		  "set type 3 charge -0.99"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m95197_auto   #####
def m95197_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.037000 2.779604",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Os': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Os': 190.23, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.77",
		  "set type 2 charge -0.76",
		  "set type 2 charge 1.5",
		  "set type 3 charge -0.76"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m95942_auto   #####
def m95942_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.402000 3.826410",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Si': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Si': 28.0855, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 0.81",
		  "set type 3 charge 1.29",
		  "set type 4 charge -1.1"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m95958_auto   #####
def m95958_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.105000 3.430851"]
    
    atom_types = {'Li': 1, 'B': 2, 'C': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'C': 12.0107}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge -0.19",
		  "set type 3 charge 0.3"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m96026_auto   #####
def m96026_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.069000 2.783168",
	       "pair_coeff 3 3 0.398000 3.982317",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Zr': 2, 'Te': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Zr': 91.224, 'Te': 127.6, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.83",
		  "set type 2 charge 2.55",
		  "set type 3 charge 1.31",
		  "set type 4 charge -0.92"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m96448_auto   #####
def m96448_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.235000 3.243762",
	       "pair_coeff 2 2 0.013000 2.637951",
	       "pair_coeff 3 3 0.069000 3.260689",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Sr': 1, 'Mn': 2, 'N': 3, 'Li': 4}

    atom_type_masses = {'Sr': 87.62, 'Mn': 54.938045, 'N': 14.0067, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.48",
		  "set type 2 charge 1.05",
		  "set type 3 charge -1.67",
		  "set type 4 charge 0.82"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m97008_auto   #####
def m97008_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.039000 2.933729",
	       "pair_coeff 3 3 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Au': 2, 'F': 3}

    atom_type_masses = {'Li': 6.941, 'Au': 196.966569, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.96",
		  "set type 2 charge 1.09",
		  "set type 3 charge -0.51"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m97277_auto   #####
def m97277_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.072000 2.798313",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Hf': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'Hf': 178.49, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.92",
		  "set type 2 charge 2.76",
		  "set type 3 charge -1.69"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m97301_auto   #####
def m97301_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.180000 3.637539",
	       "pair_coeff 3 3 0.069000 3.260689"]
    
    atom_types = {'Li': 1, 'B': 2, 'N': 3}

    atom_type_masses = {'Li': 6.941, 'B': 10.811, 'N': 14.0067}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 0.33",
		  "set type 3 charge -1.43"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m97734_auto   #####
def m97734_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.030000 2.657551",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.072000 2.980056",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Na': 1, 'Li': 2, 'Y': 3, 'F': 4}

    atom_type_masses = {'Na': 22.98976928, 'Li': 6.941, 'Y': 88.90585, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.02",
		  "set type 2 charge 0.91",
		  "set type 3 charge 2.34",
		  "set type 4 charge -0.83"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m98759_auto   #####
def m98759_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.505000 4.008153",
	       "pair_coeff 3 3 0.309000 3.768502",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'Al': 2, 'As': 3, 'O': 4}

    atom_type_masses = {'Li': 6.941, 'Al': 26.9815386, 'As': 74.9216, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.85",
		  "set type 2 charge 1.37",
		  "set type 3 charge 1.21",
		  "set type 4 charge -0.66"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m98788_auto   #####
def m98788_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.81",
		  "set type 2 charge 0.49",
		  "set type 3 charge -0.65"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m98972_auto   #####
def m98972_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.105000 3.430851",
	       "pair_coeff 3 3 0.060000 3.118146"]
    
    atom_types = {'Li': 1, 'C': 2, 'O': 3}

    atom_type_masses = {'Li': 6.941, 'C': 12.0107, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.89",
		  "set type 2 charge 0.33",
		  "set type 3 charge -0.77"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m99156_auto   #####
def m99156_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "dielectric 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.364000 3.298998",
	       "pair_coeff 2 2 0.449000 3.937772",
	       "pair_coeff 3 3 0.060000 3.118146",
	       "pair_coeff 4 4 0.025000 2.183593"]
    
    atom_types = {'Ba': 1, 'Sb': 2, 'O': 3, 'Li': 4}

    atom_type_masses = {'Ba': 137.327, 'Sb': 121.76, 'O': 15.9994, 'Li': 6.941}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 1.65",
		  "set type 2 charge 1.01",
		  "set type 3 charge -0.89",
		  "set type 4 charge 1.05"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m99543_auto   #####
def m99543_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.567000 3.912827",
	       "pair_coeff 3 3 0.291000 3.746229"]
    
    atom_types = {'Li': 1, 'Sn': 2, 'Se': 3}

    atom_type_masses = {'Li': 6.941, 'Sn': 118.71, 'Se': 78.96}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.71",
		  "set type 2 charge 0.68",
		  "set type 3 charge -0.7"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m99617_auto   #####
def m99617_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "pair_modify tail yes mix arithmetic",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.045000 4.024190",
	       "pair_coeff 2 2 0.025000 2.183593",
	       "pair_coeff 3 3 0.379000 3.813047",
	       "pair_coeff 4 4 0.060000 3.118146"]
    
    atom_types = {'Cs': 1, 'Li': 2, 'Ge': 3, 'O': 4}

    atom_type_masses = {'Cs': 132.9054519, 'Li': 6.941, 'Ge': 72.64, 'O': 15.9994}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.74",
		  "set type 2 charge 0.79",
		  "set type 3 charge 1.19",
		  "set type 4 charge -1.06"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

#
#####   Automatically generated lammps method m99675_auto   #####
def m99675_auto(atoms: ase.Atoms):

    lmpcmds = ["pair_style lj/cut/coul/long 12.500",
	       "pair_modify tail yes mix arithmetic",
	       "dielectric 1.0",
	       "special_bonds lj/coul 0.0 0.0 1.0",
	       "kspace_style ewald 1.0e-5",
	       "pair_coeff 1 1 0.025000 2.183593",
	       "pair_coeff 2 2 0.238000 3.028165",
	       "pair_coeff 3 3 0.014000 2.558661",
	       "pair_coeff 4 4 0.050000 2.996983"]
    
    atom_types = {'Li': 1, 'Ca': 2, 'Co': 3, 'F': 4}

    atom_type_masses = {'Li': 6.941, 'Ca': 40.078, 'Co': 58.933195, 'F': 18.9984032}

    log_file = None

    lammps_header = ["units real",
		     "atom_style full",
		     "boundary p p p"]

    amendments = ["set type 1 charge 0.76",
		  "set type 2 charge 1.59",
		  "set type 3 charge 0.95",
		  "set type 4 charge -0.55"]

    post_changebox_cmds = None

    calc = LAMMPSlib(lmpcmds=lmpcmds,
                     atom_types=atom_types,
                     atom_type_masses=atom_type_masses,
                     log_file=log_file,
                     lammps_header=lammps_header,
                     amendments=amendments,
                     post_changebox_cmds=post_changebox_cmds)
    
    atoms.set_calculator(calc)

    return atoms.get_potential_energy()

